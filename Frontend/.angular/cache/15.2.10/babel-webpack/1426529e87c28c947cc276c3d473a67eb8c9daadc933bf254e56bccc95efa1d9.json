{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction UserTakeTestView_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"label\", 5);\n    i0.ɵɵtext(3, \" \\u00B7 You have 20 minutes to complete the test.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 6);\n    i0.ɵɵtext(5, \" \\u00B7 Once you click the start button, the TIMER will start.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"label\", 6);\n    i0.ɵɵtext(7, \" \\u00B7 During the TEST process, you will not be able to pause or cancel.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 6);\n    i0.ɵɵtext(9, \" \\u00B7 After you start test, the clock will appear in the upper right corner.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 6);\n    i0.ɵɵtext(11, \" \\u00B7 When you answer the question, your answer is automatically SAVED.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"label\", 6);\n    i0.ɵɵtext(13, \" \\u00B7 Once you have completed all questions, please click the \\\"Submit\\\" button.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 7)(15, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_1_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.startButton());\n    });\n    i0.ɵɵtext(16, \"Start\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction UserTakeTestView_div_2_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"input\", 25);\n    i0.ɵɵlistener(\"change\", function UserTakeTestView_div_2_div_19_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.captureAnswer($event, ctx_r9.currentQuestionIndex));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 26);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const a_r8 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"answer\", ctx_r4.currentQuestionIndex, \"\");\n    i0.ɵɵpropertyInterpolate(\"id\", a_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", a_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", a_r8, \" \");\n  }\n}\nfunction UserTakeTestView_div_2_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_div_23_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.checkAnswer());\n    });\n    i0.ɵɵelementStart(1, \"button\", 28);\n    i0.ɵɵtext(2, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserTakeTestView_div_2_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 29);\n    i0.ɵɵtext(2, \"Time's up!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_div_24_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.checkAnswer());\n    });\n    i0.ɵɵtext(4, \"View Result\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserTakeTestView_div_2_div_25_div_6_tr_15_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 40);\n    i0.ɵɵtext(1, \"Correct\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_2_div_25_div_6_tr_15_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 41);\n    i0.ɵɵtext(1, \"Incorrect\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_2_div_25_div_6_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtemplate(10, UserTakeTestView_div_2_div_25_div_6_tr_15_span_10_Template, 2, 0, \"span\", 38);\n    i0.ɵɵtemplate(11, UserTakeTestView_div_2_div_25_div_6_tr_15_span_11_Template, 2, 0, \"span\", 39);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r19 = ctx.$implicit;\n    const i_r20 = ctx.index;\n    const ctx_r18 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r20 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r19.question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r18.selectedAnswers[i_r20]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r19.correctAnswer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.selectedAnswers[i_r20] === question_r19.correctAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.selectedAnswers[i_r20] !== question_r19.correctAnswer);\n  }\n}\nfunction UserTakeTestView_div_2_div_25_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 33)(2, \"thead\", 34)(3, \"tr\")(4, \"th\", 35);\n    i0.ɵɵtext(5, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 35);\n    i0.ɵɵtext(7, \"Question\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 35);\n    i0.ɵɵtext(9, \"Your Answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 35);\n    i0.ɵɵtext(11, \"Correct Answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 35);\n    i0.ɵɵtext(13, \"Status\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, UserTakeTestView_div_2_div_25_div_6_tr_15_Template, 12, 6, \"tr\", 36);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r15.questionList);\n  }\n}\nfunction UserTakeTestView_div_2_div_25_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \" No answers have been submitted. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_2_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 30)(2, \"h1\", 29);\n    i0.ɵɵtext(3, \"Test Results\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h2\", 29);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, UserTakeTestView_div_2_div_25_div_6_Template, 16, 1, \"div\", 31);\n    i0.ɵɵtemplate(7, UserTakeTestView_div_2_div_25_ng_template_7_Template, 2, 0, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r16 = i0.ɵɵreference(8);\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Total Corrected Answers: \", ctx_r7.correctAnswers, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.selectedAnswers.length > 0)(\"ngIfElse\", _r16);\n  }\n}\nfunction UserTakeTestView_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h1\");\n    i0.ɵɵtext(2, \"Test Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10)(4, \"div\", 11)(5, \"h4\", 12);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 13)(8, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_Template_div_click_8_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.previousButton());\n    });\n    i0.ɵɵelementStart(9, \"button\", 15);\n    i0.ɵɵelement(10, \"i\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 17)(12, \"div\", 18)(13, \"h4\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"h5\");\n    i0.ɵɵtext(16, \"Please choose correct answer\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 11)(18, \"div\", 19);\n    i0.ɵɵtemplate(19, UserTakeTestView_div_2_div_19_Template, 4, 4, \"div\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_Template_div_click_20_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.nextButton());\n    });\n    i0.ɵɵelementStart(21, \"button\", 15);\n    i0.ɵɵelement(22, \"i\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(23, UserTakeTestView_div_2_div_23_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(24, UserTakeTestView_div_2_div_24_Template, 5, 0, \"div\", 23);\n    i0.ɵɵtemplate(25, UserTakeTestView_div_2_div_25_Template, 9, 3, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate3(\"Time Remaining: \", ctx_r1.minutes, \":\", ctx_r1.seconds < 10 ? \"0\" : \"\", \"\", ctx_r1.seconds, \"\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.currentQuestion.question);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.currentQuestion.answers);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentQuestionIndex == ctx_r1.questionList.length - 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.remainingTime <= 0 && ctx_r1.startTest);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.startTest);\n  }\n}\nexport class UserTakeTestView {\n  constructor(router, cdRef) {\n    this.router = router;\n    this.cdRef = cdRef;\n    this.startTest = false;\n    this.currentQuestion = null;\n    this.currentQuestionIndex = -1;\n    this.questionList = [];\n    this.selectedAnswers = [];\n    this.correctAnswers = 0;\n    this.setId = -1;\n    // Timer var\n    this.remainingTime = 20 * 60; // 20 minutes in seconds\n    this.minutes = 0;\n    this.seconds = 0;\n    let question = {\n      questionId: 1,\n      question: \"Char* string = 'Hello world';\\nprintf(\\\"%d\\\", sizeof(string))\",\n      answers: ['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'],\n      correctAnswer: ['D. I don\\'t known']\n    };\n    let question1 = {\n      questionId: 1,\n      question: \"How many data type are there in JavaScript)\",\n      answers: ['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'],\n      correctAnswer: ['D. I don\\'t known']\n    };\n    this.questionList = [question, question1, question, question1];\n  }\n  ngOnInit() {\n    this.setId = this.router.snapshot.params['tid'];\n  }\n  startButton() {\n    this.startTest = true;\n    this.currentQuestionIndex = 0;\n    this.currentQuestion = this.questionList[0];\n    this.updateDisplay();\n    this.startTimer();\n  }\n  nextButton() {\n    this.currentQuestionIndex++;\n    if (this.currentQuestionIndex >= this.questionList.length) {\n      this.currentQuestionIndex = this.questionList.length - 1;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    this.cdRef.detectChanges();\n  }\n  previousButton() {\n    this.currentQuestionIndex--;\n    if (this.currentQuestionIndex <= -1) {\n      this.currentQuestionIndex = 0;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    this.cdRef.detectChanges();\n  }\n  captureAnswer(event, questionIndex) {\n    this.selectedAnswers[questionIndex] = event.target.value;\n  }\n  checkAnswer() {\n    this.startTest = false;\n    for (let i = 0; i <= this.questionList.length; i++) {\n      if (this.questionList[i] == this.selectedAnswers[i]) {\n        this.correctAnswers++;\n      }\n    }\n  }\n  startTimer() {\n    this.timerInterval = setInterval(() => {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n        this.updateDisplay();\n      } else {\n        clearInterval(this.timerInterval);\n        // Logic when timer reaches 0, e.g., submit test automatically\n      }\n    }, 1000);\n  }\n  updateDisplay() {\n    this.minutes = Math.floor(this.remainingTime / 60);\n    this.seconds = this.remainingTime % 60;\n  }\n  ngOnDestroy() {\n    clearInterval(this.timerInterval); // Clear the interval when component is destroyed\n  }\n  static #_ = this.ɵfac = function UserTakeTestView_Factory(t) {\n    return new (t || UserTakeTestView)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserTakeTestView,\n    selectors: [[\"app-user-question-list-view\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-4\"], [\"class\", \"row justify-content-center\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"min-height: 400px;\", 4, \"ngIf\"], [1, \"row\", \"justify-content-center\"], [1, \"card\", \"mt-4\", 2, \"width\", \"850px\"], [1, \"h4\", \"m-2\", \"mt-4\"], [1, \"h4\", \"m-2\"], [1, \"row\", \"text-center\", \"justify-content-center\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", \"px-2\", \"m-4\", 2, \"width\", \"200px\", 3, \"click\"], [1, \"row\", 2, \"min-height\", \"400px\"], [1, \"col-10\"], [1, \"row\"], [2, \"margin-left\", \"835px\"], [1, \"row\", \"border\", \"rounded\", \"p-3\", \"mt-5\"], [1, \"col-2\", \"d-flex\", \"justify-content-center\", \"align-items-center\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\"], [1, \"bi\", \"bi-arrow-left\"], [1, \"col-8\"], [1, \"row\", \"mb-3\"], [1, \"col-12\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [1, \"bi\", \"bi-arrow-right\"], [\"class\", \"d-flex justify-content-center\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"form-check\"], [\"type\", \"radio\", 1, \"form-check-input\", 3, \"name\", \"id\", \"change\"], [1, \"form-check-label\", 3, \"for\"], [1, \"d-flex\", \"justify-content-center\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\", 2, \"width\", \"150px\"], [1, \"text-center\"], [1, \"container\", \"mt-5\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResults\", \"\"], [1, \"table\", \"table-bordered\"], [1, \"thead-light\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [\"class\", \"badge badge-primary\", 4, \"ngIf\"], [\"class\", \"badge badge-danger\", 4, \"ngIf\"], [1, \"badge\", \"badge-primary\"], [1, \"badge\", \"badge-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"]],\n    template: function UserTakeTestView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, UserTakeTestView_div_1_Template, 17, 0, \"div\", 1);\n        i0.ɵɵtemplate(2, UserTakeTestView_div_2_Template, 26, 8, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.startTest == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.startTest == true && ctx.remainingTime > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","UserTakeTestView","constructor","router","cdRef","question","questionId","answers","correctAnswer","question1","questionList","ngOnInit","setId","snapshot","params","startButton","startTest","currentQuestionIndex","currentQuestion","updateDisplay","startTimer","nextButton","length","detectChanges","previousButton","captureAnswer","event","questionIndex","selectedAnswers","target","value","checkAnswer","i","correctAnswers","timerInterval","setInterval","remainingTime","clearInterval","minutes","Math","floor","seconds","ngOnDestroy","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTakeTestView/userTakeTestView.html","/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTakeTestView/userTakeTestView.ts"],"sourcesContent":["<div class=\"container mt-4\">\n\n  <div class=\"row justify-content-center\" *ngIf=\"startTest == false\">\n    <div class=\"card mt-4\" style=\"width: 850px\">\n      <label class=\"h4 m-2 mt-4\"> · You have 20 minutes to complete the test.</label>\n      <label class=\"h4 m-2\"> · Once you click the start button, the TIMER will start.</label>\n      <label class=\"h4 m-2\"> · During the TEST process, you will not be able to pause or cancel.</label>\n      <label class=\"h4 m-2\"> · After you start test, the clock will appear in the upper right corner.</label>\n      <label class=\"h4 m-2\"> · When you answer the question, your answer is automatically SAVED.</label>\n      <label class=\"h4 m-2\"> · Once you have completed all questions, please click the \"Submit\" button.</label>\n      <div class=\"row text-center justify-content-center\">\n        <button class=\"btn btn-primary btn-lg px-2 m-4\" style=\"width: 200px\" (click)=\"startButton()\">Start</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\" style=\"min-height: 400px;\" *ngIf=\"startTest == true && remainingTime > 0\">\n   <h1>Test Name</h1>\n    <div class=\"col-10\">\n      <div class=\"row\">\n        <h4 style=\"margin-left: 835px;\">Time Remaining: {{ minutes }}:{{ seconds < 10 ? '0' : '' }}{{ seconds }}</h4>\n      </div>\n      <div class=\"row border rounded p-3 mt-5\">\n        <!-- Previous Button -->\n        <div class=\"col-2 d-flex justify-content-center align-items-center\" (click)=\"previousButton()\">\n          <button class=\"btn btn-secondary btn-sm\">\n            <i class=\"bi bi-arrow-left\"></i>\n          </button>\n        </div>\n      \n        <!-- Question and Answers -->\n        <div class=\"col-8\">\n          <!-- Question -->\n          <div class=\"row mb-3\">\n            <h4>{{currentQuestion.question}}</h4>\n            <h5>Please choose correct answer</h5>\n          </div>\n      \n          <!-- Answers -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-check\" *ngFor=\"let a of currentQuestion.answers\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"answer{{currentQuestionIndex}}\" id=\"{{a}}\" (change)=\"captureAnswer($event, currentQuestionIndex)\">\n                <label class=\"form-check-label\" for=\"{{a}}\">\n                  {{a}}\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n        <!-- Next Button -->\n        <div class=\"col-2 d-flex justify-content-center align-items-center\" (click)=\"nextButton()\">\n          <button class=\"btn btn-secondary btn-sm\">\n            <i class=\"bi bi-arrow-right\"></i>\n          </button>\n        \n        </div>\n        <div class=\"d-flex justify-content-center\"  (click)=\"checkAnswer()\" *ngIf=\"currentQuestionIndex == questionList.length-1\">\n          <button class=\"btn btn-secondary btn-sm\" style=\"width: 150px\">Submit</button>\n        </div>\n      </div>\n  </div>\n  <div *ngIf=\"remainingTime <= 0 && startTest\">\n    <h1 class=\"text-center\">Time's up!</h1>\n    <button class=\"btn btn-primary btn-lg px-2 m-4\" style=\"width: 200px\" (click)=\"checkAnswer()\">View Result</button>\n  </div>\n  <div *ngIf=\"!startTest\">\n    <div class=\"container mt-5\">\n      <h1 class=\"text-center\">Test Results</h1>\n      <h2 class=\"text-center\">Total Corrected Answers: {{correctAnswers}}</h2>\n      <div *ngIf=\"selectedAnswers.length > 0; else noResults\">\n        <table class=\"table table-bordered\">\n          <thead class=\"thead-light\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Question</th>\n              <th scope=\"col\">Your Answer</th>\n              <th scope=\"col\">Correct Answer</th>\n              <th scope=\"col\">Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let question of questionList; let i = index\">\n              <th scope=\"row\">{{ i + 1 }}</th>\n              <td>{{ question.question }}</td>\n              <td>{{ selectedAnswers[i] }}</td>\n              <td>{{ question.correctAnswer }}</td>\n              <td>\n                <span class=\"badge badge-primary\" *ngIf=\"selectedAnswers[i] === question.correctAnswer\">Correct</span>\n                <span class=\"badge badge-danger\" *ngIf=\"selectedAnswers[i] !== question.correctAnswer\">Incorrect</span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    \n      <ng-template #noResults>\n        <div class=\"alert alert-warning\" role=\"alert\">\n          No answers have been submitted.\n        </div>\n      </ng-template>\n    </div>\n    \n  </div>\n</div>\n","import {Component, OnInit, ChangeDetectorRef} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-question-list-view',\n  templateUrl: './userTakeTestView.html',\n  styleUrls: ['./userTakeTestView.css']\n})\nexport class UserTakeTestView implements OnInit\n{\n  startTest:boolean = false;\n  currentQuestion:any = null;\n  currentQuestionIndex:number = -1;\n  questionList:any = [];\n  selectedAnswers: string[] = [];\n  correctAnswers:number = 0;\n  setId:number = -1;\n  // Timer var\n  remainingTime: number = 20 * 60; // 20 minutes in seconds\n  timerInterval: any;\n  minutes: number = 0;\n  seconds: number = 0;\n  finishTest\n\n  constructor(private router:ActivatedRoute, private cdRef:ChangeDetectorRef )\n  {\n    let question = {questionId:1, question:\"Char* string = 'Hello world';\\nprintf(\\\"%d\\\", sizeof(string))\",\n      answers:['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'], correctAnswer:['D. I don\\'t known']}\n    let question1 = {questionId:1, question:\"How many data type are there in JavaScript)\",\n      answers:['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'], correctAnswer:['D. I don\\'t known']}\n      this.questionList = [question,question1,question,question1] ;\n  }\n\n  ngOnInit(): void\n  {\n    this.setId = this.router.snapshot.params['tid'];\n  }\n\n  startButton()\n  {\n    this.startTest = true;\n    this.currentQuestionIndex = 0;\n    this.currentQuestion = this.questionList[0];\n    this.updateDisplay();\n    this.startTimer();\n\n  }\n  nextButton()\n  {\n    this.currentQuestionIndex++;\n    if(this.currentQuestionIndex >= this.questionList.length)\n    {\n      this.currentQuestionIndex = this.questionList.length - 1;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    this.cdRef.detectChanges();\n  }\n\n  previousButton()\n  {\n    this.currentQuestionIndex--;\n    if(this.currentQuestionIndex <= -1)\n    {\n      this.currentQuestionIndex = 0;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    this.cdRef.detectChanges();\n  }\n  captureAnswer(event: any, questionIndex: number)\n  {\n    this.selectedAnswers[questionIndex] = event.target.value;\n  }\n  checkAnswer()\n  {\n    this.startTest = false;\n    for(let i = 0; i <= this.questionList.length; i++)\n    {\n      if(this.questionList[i] == this.selectedAnswers[i])\n      {\n        this.correctAnswers++;\n      }\n    }\n  }\n  startTimer() {\n    this.timerInterval = setInterval(() => {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n        this.updateDisplay();\n      } else {\n        clearInterval(this.timerInterval);\n        // Logic when timer reaches 0, e.g., submit test automatically\n      }\n    }, 1000);\n  }\n  updateDisplay()\n  {\n    this.minutes = Math.floor(this.remainingTime / 60);\n    this.seconds = this.remainingTime % 60;\n  }\n  ngOnDestroy() \n  {\n    clearInterval(this.timerInterval); // Clear the interval when component is destroyed\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}