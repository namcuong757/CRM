{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TopicService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getAllTopic() {\n    return this.httpClient.get('http://localhost:8080/api/v1/admin/getAllTopic');\n  }\n  addNewTopic(topic) {\n    const httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n    const info = {\n      topic: topic.topic,\n      description: topic.description\n    };\n    // @ts-ignore\n    return this.httpClient.post('http://localhost:8080/api/v1/admin/addNewTopic', JSON.stringify(info), {\n      headers: httpHeaders,\n      responseType: 'text'\n    });\n  }\n  deleteTopic(id) {\n    // @ts-ignore\n    return this.httpClient.delete('http://localhost:8080/api/v1/admin/deleteTopicById/' + id, {\n      responseType: 'text'\n    });\n  }\n  updateTopic(topic) {\n    const httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n    const info = {\n      id: topic.id,\n      topic: topic.topic,\n      description: topic.description\n    }; // @ts-ignore\n    return this.httpClient.put('http://localhost:8080/api/v1/admin/uptateTopic/' + topic.id, JSON.stringify(info), {\n      headers: httpHeaders,\n      responseType: 'text'\n    });\n  }\n  static #_ = this.ɵfac = function TopicService_Factory(t) {\n    return new (t || TopicService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TopicService,\n    factory: TopicService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAmB,sBAAsB;;;AAQxE,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;EAC5B;EAEFC,WAAW;IAET,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAU,gDAAgD,CAAC;EACvF;EAEAC,WAAW,CAACC,KAAW;IAErB,MAAMC,WAAW,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAC7E,MAAMC,IAAI,GAAG;MACXH,KAAK,EAAEA,KAAK,CAACA,KAAK;MAClBI,WAAW,EAAEJ,KAAK,CAACI;KACpB;IACD;IACA,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAS,gDAAgD,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,EAAE;MAACK,OAAO,EAAEP,WAAW;MAAEQ,YAAY,EAAE;IAAM,CAAC,CAAC;EAC3J;EAEAC,WAAW,CAACC,EAAS;IAEnB;IACA,OAAO,IAAI,CAACf,UAAU,CAACgB,MAAM,CAAS,qDAAqD,GAAGD,EAAE,EAAE;MAACF,YAAY,EAAE;IAAM,CAAC,CAAC;EAC3H;EAEAI,WAAW,CAACb,KAAW;IAErB,MAAMC,WAAW,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAC7E,MAAMC,IAAI,GAAG;MACXQ,EAAE,EAAEX,KAAK,CAACW,EAAE;MACZX,KAAK,EAAEA,KAAK,CAACA,KAAK;MAClBI,WAAW,EAAEJ,KAAK,CAACI;KACpB;IACD,OAAO,IAAI,CAACR,UAAU,CAACkB,GAAG,CAAS,iDAAiD,GAAGd,KAAK,CAACW,EAAE,EAAEL,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,EAAE;MAACK,OAAO,EAAEP,WAAW;MAAEQ,YAAY,EAAE;IAAM,CAAC,CAAC;EACtK;EAAC;qBApCUf,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAqB,SAAZrB,YAAY;IAAAsB,YAFX;EAAM","names":["HttpHeaders","TopicService","constructor","httpClient","getAllTopic","get","addNewTopic","topic","httpHeaders","set","info","description","post","JSON","stringify","headers","responseType","deleteTopic","id","delete","updateTopic","put","factory","providedIn"],"sourceRoot":"","sources":["/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/service/topic-service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport {observable, Observable} from \"rxjs\";\nimport { Topic } from \"../model/Topic\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopicService\n{\n  constructor(private httpClient:HttpClient)\n  { }\n\n  getAllTopic():Observable<Topic[]>\n  {\n    return this.httpClient.get<Topic[]>('http://localhost:8080/api/v1/admin/getAllTopic');\n  }\n\n  addNewTopic(topic:Topic):Observable<string>\n  {\n    const httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n    const info = {\n      topic: topic.topic,\n      description: topic.description\n    }\n    // @ts-ignore\n    return this.httpClient.post<string>('http://localhost:8080/api/v1/admin/addNewTopic', JSON.stringify(info), {headers: httpHeaders, responseType: 'text'});\n  }\n\n  deleteTopic(id:number):Observable<string>\n  {\n    // @ts-ignore\n    return this.httpClient.delete<string>('http://localhost:8080/api/v1/admin/deleteTopicById/' + id, {responseType: 'text'});\n  }\n\n  updateTopic(topic:Topic):Observable<string>\n  {\n    const httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n    const info = {\n      id: topic.id,\n      topic: topic.topic,\n      description: topic.description\n    }// @ts-ignore\n    return this.httpClient.put<string>('http://localhost:8080/api/v1/admin/uptateTopic/' + topic.id, JSON.stringify(info), {headers: httpHeaders, responseType: 'text'});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}