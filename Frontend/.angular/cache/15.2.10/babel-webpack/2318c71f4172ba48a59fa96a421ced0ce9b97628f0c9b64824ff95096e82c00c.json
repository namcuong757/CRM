{"ast":null,"code":"import { Account } from \"../../../model/Account\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/account-service\";\nexport class ResetPasswordView {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.user = new Account();\n  }\n  ngOnInit() {\n    // @ts-ignore\n    this.user = JSON.parse(window.sessionStorage.getItem('MCQuser'));\n  }\n  resetPassword() {\n    let oldPassword = document.getElementById(\"oldPassword\").value;\n    let newPassword = document.getElementById(\"password\").value;\n    let confirmPassword = document.getElementById(\"confirm\").value;\n    if (oldPassword == '') {\n      // @ts-ignore\n      document.getElementById(\"message\").innerHTML = '<div class=\"text-bg-danger h6 m-2\">Original Password is Empty</div>';\n    } else if (newPassword == '') {\n      // @ts-ignore\n      document.getElementById(\"message\").innerHTML = '<div class=\"text-bg-danger h6 m-2\">New Password is Empty</div>';\n    } else if (newPassword != confirmPassword) {\n      // @ts-ignore\n      document.getElementById(\"message\").innerHTML = '<div class=\"text-bg-danger h6 m-2\">Confirm Password Not Match</div>';\n    } else {\n      this.accountService.resetPassword(this.user.id, newPassword, oldPassword).subscribe(data => {\n        console.log(data);\n        if (data == 'success') {\n          this.user.password = newPassword;\n          window.sessionStorage.setItem(\"MCQuser\", JSON.stringify(this.user));\n          window.location.href = this.user.role + \"/resetPassword/successful\";\n        } else {\n          // @ts-ignore\n          document.getElementById(\"message\").innerHTML = '<div class=\"text-bg-danger h6 m-2\">' + data + '</div>';\n        }\n      }, error => {\n        window.location.href = this.user.role + \"/updateAccount/\" + error.message;\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ResetPasswordView_Factory(t) {\n    return new (t || ResetPasswordView)(i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordView,\n    selectors: [[\"app-reset-password-view\"]],\n    decls: 20,\n    vars: 0,\n    consts: [[1, \"modal-content\", \"animate\", \"container\", \"mt-5\", \"mb-5\"], [2, \"text-align\", \"center\", \"margin\", \"20px 0 5px\"], [\"id\", \"message\", 1, \"m-3\", \"text-center\", \"h6\", \"text-secondary\"], [1, \"m-2\"], [\"type\", \"password\", \"id\", \"oldPassword\", \"placeholder\", \"Original Password\", \"required\", \"\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"New Password\", \"required\", \"\"], [\"type\", \"password\", \"id\", \"confirm\", \"placeholder\", \"Confirm Password\", \"required\", \"\"], [\"type\", \"button\", 3, \"click\"]],\n    template: function ResetPasswordView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Reset Your Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"label\")(7, \"b\");\n        i0.ɵɵtext(8, \"Original Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementStart(10, \"label\")(11, \"b\");\n        i0.ɵɵtext(12, \"New Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵelementStart(14, \"label\")(15, \"b\");\n        i0.ɵɵtext(16, \"ConfirmPassword\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"input\", 6);\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ResetPasswordView_Template_button_click_18_listener() {\n          return ctx.resetPassword();\n        });\n        i0.ɵɵtext(19, \"Reset Password\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAQA,OAAO,QAAO,wBAAwB;;;AAQ9C,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,cAA6B;IAA7B,mBAAc,GAAdA,cAAc;IAFhC,SAAI,GAAW,IAAIH,OAAO,EAAE;EAI9B;EAEAI,QAAQ;IAEN;IACA,IAAI,CAACC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAEC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC,CAAE;EACpE;EAEAC,aAAa;IAEX,IAAIC,WAAW,GAAQC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAsB,CAACC,KAAK;IACxF,IAAIC,WAAW,GAAQH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAyB,CAACC,KAAK;IACxF,IAAIE,eAAe,GAAIJ,QAAQ,CAACC,cAAc,CAAC,SAAS,CAA0B,CAACC,KAAK;IAExF,IAAIH,WAAW,IAAI,EAAE,EACrB;MACE;MACAC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACI,SAAS,GAAG,qEAAqE;KACrH,MACI,IAAIF,WAAW,IAAI,EAAE,EAC1B;MACE;MACAH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACI,SAAS,GAAG,gEAAgE;KAChH,MACI,IAAGF,WAAW,IAAIC,eAAe,EACtC;MACE;MACAJ,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACI,SAAS,GAAG,qEAAqE;KACrH,MAED;MAEE,IAAI,CAACf,cAAc,CAACQ,aAAa,CAAC,IAAI,CAACN,IAAI,CAACc,EAAE,EAAEH,WAAW,EAAEJ,WAAW,CAAC,CACtEQ,SAAS,CACRC,IAAI,IAAK;QAEPC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAGA,IAAI,IAAI,SAAS,EACpB;UACE,IAAI,CAAChB,IAAI,CAACmB,QAAQ,GAAGR,WAAW;UAChCR,MAAM,CAACC,cAAc,CAACgB,OAAO,CAAC,SAAS,EAAEnB,IAAI,CAACoB,SAAS,CAAC,IAAI,CAACrB,IAAI,CAAC,CAAC;UACnEG,MAAM,CAACmB,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACvB,IAAI,CAACwB,IAAI,GAAG,2BAA2B;SACpE,MAED;UACE;UACAhB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACI,SAAS,GAAG,qCAAqC,GAACG,IAAI,GAAC,QAAQ;;MAEtG,CAAC,EACDS,KAAK,IAAG;QAENtB,MAAM,CAACmB,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACvB,IAAI,CAACwB,IAAI,GAAG,iBAAiB,GAAGC,KAAK,CAACC,OAAO;MAC3E,CAAC,CAAC;;EAEV;EAAC;qBA5DU9B,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAA+B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT9BC,8BAAuD;QACJA,mCAAmB;QAAAA,iBAAK;QAEzEA,8BAA4D;QACzCA,qBAAI;QACrBA,iBAAM;QAGRA,6BAAO;QAAGA,iCAAiB;QAAAA,iBAAI;QAC/BA,2BAAiF;QACjFA,8BAAO;QAAGA,6BAAY;QAAAA,iBAAI;QAC1BA,4BAA0E;QAC1EA,8BAAO;QAAGA,gCAAe;QAAAA,iBAAI;QAC7BA,4BAA6E;QAC7EA,kCAAgD;QAA1BA;UAAA,OAASC,mBAAe;QAAA,EAAC;QAACD,+BAAc;QAAAA,iBAAS","names":["Account","ResetPasswordView","constructor","accountService","ngOnInit","user","JSON","parse","window","sessionStorage","getItem","resetPassword","oldPassword","document","getElementById","value","newPassword","confirmPassword","innerHTML","id","subscribe","data","console","log","password","setItem","stringify","location","href","role","error","message","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/commonView/resetPasswordView/resetPasswordView.ts","/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/commonView/resetPasswordView/resetPasswordView.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Account} from \"../../../model/Account\";\nimport {AccountService} from \"../../../service/account-service\";\n\n@Component({\n  selector: 'app-reset-password-view',\n  templateUrl: './resetPasswordView.html',\n  styleUrls: ['./resetPasswordView.css']\n})\nexport class ResetPasswordView implements OnInit\n{\n    user:Account = new Account();\n\n  constructor(private accountService:AccountService)\n  {\n  }\n\n  ngOnInit(): void\n  {\n    // @ts-ignore\n    this.user = JSON.parse( window.sessionStorage.getItem('MCQuser') );\n  }\n\n  resetPassword()\n  {\n    let oldPassword     = (document.getElementById(\"oldPassword\") as HTMLInputElement).value;\n    let newPassword     = (document.getElementById(\"password\"   ) as HTMLInputElement).value;\n    let confirmPassword = (document.getElementById(\"confirm\"    ) as HTMLInputElement).value;\n\n    if( oldPassword == '')\n    {\n      // @ts-ignore\n      document.getElementById(\"message\").innerHTML = '<div class=\"text-bg-danger h6 m-2\">Original Password is Empty</div>';\n    }\n    else if( newPassword == '')\n    {\n      // @ts-ignore\n      document.getElementById(\"message\").innerHTML = '<div class=\"text-bg-danger h6 m-2\">New Password is Empty</div>';\n    }\n    else if(newPassword != confirmPassword)\n    {\n      // @ts-ignore\n      document.getElementById(\"message\").innerHTML = '<div class=\"text-bg-danger h6 m-2\">Confirm Password Not Match</div>';\n    }\n    else\n    {\n\n      this.accountService.resetPassword(this.user.id, newPassword, oldPassword)\n        .subscribe(\n          data   =>\n          {\n            console.log(data)\n            if(data == 'success')\n            {\n              this.user.password = newPassword;\n              window.sessionStorage.setItem(\"MCQuser\", JSON.stringify(this.user));\n              window.location.href = this.user.role + \"/resetPassword/successful\";\n            }\n            else\n            {\n              // @ts-ignore\n              document.getElementById(\"message\").innerHTML = '<div class=\"text-bg-danger h6 m-2\">'+data+'</div>';\n            }\n          },\n          error =>\n          {\n            window.location.href = this.user.role + \"/updateAccount/\" + error.message;\n          })\n    }\n  }\n\n}\n","<div class=\"modal-content animate container mt-5 mb-5\">\n  <h2 style=\"text-align:center;margin:20px 0 5px;\">Reset Your Password</h2>\n\n  <div id='message' class='m-3 text-center h6 text-secondary'>\n    <div class=\"m-2\"><br>\n    </div>\n  </div>\n\n  <label><b>Original Password</b></label>\n  <input type=\"password\" id=\"oldPassword\" placeholder=\"Original Password\" required>\n  <label><b>New Password</b></label>\n  <input type=\"password\" id=\"password\" placeholder=\"New Password\"  required>\n  <label><b>ConfirmPassword</b></label>\n  <input type=\"password\" id=\"confirm\" placeholder=\"Confirm Password\"  required>\n  <button type=\"button\" (click)=\"resetPassword()\">Reset Password</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}