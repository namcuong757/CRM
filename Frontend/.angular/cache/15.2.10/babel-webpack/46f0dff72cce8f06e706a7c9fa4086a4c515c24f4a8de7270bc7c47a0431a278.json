{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"gradePieChart\"];\nfunction UserTestResultView_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const test_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(test_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(test_r2.level);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(test_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(test_r2.topic);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(test_r2.finalGrade);\n  }\n}\nChart.register(...registerables);\nexport class UserTestResultView {\n  constructor() {\n    this.tests = [{\n      id: 1,\n      level: 'Beginner',\n      name: 'Math 101',\n      topic: 'Algebra',\n      finalGrade: 'A'\n    }, {\n      id: 2,\n      level: 'Intermediate',\n      name: 'Science 201',\n      topic: 'Physics',\n      finalGrade: 'B'\n    }, {\n      id: 3,\n      level: 'Advanced',\n      name: 'CS 301',\n      topic: 'Physics',\n      finalGrade: 'B'\n    }, {\n      id: 4,\n      level: 'Intermediate',\n      name: 'Science 201',\n      topic: 'Physics',\n      finalGrade: 'B'\n    }, {\n      id: 5,\n      level: 'Advanced',\n      name: 'Science 201',\n      topic: 'Physics',\n      finalGrade: 'B'\n    }, {\n      id: 6,\n      level: 'Intermediate',\n      name: 'Science 201',\n      topic: 'Physics',\n      finalGrade: 'B'\n    }, {\n      id: 7,\n      level: 'Beginner',\n      name: 'Science 201',\n      topic: 'Physics',\n      finalGrade: 'B'\n    }\n    // ... more tests\n    ];\n\n    this.gradeDistribution = {\n      'A': 0,\n      'B': 0,\n      'C': 0,\n      'D': 0,\n      'F': 0\n    };\n  }\n  ngOnInit() {\n    // Initialize grade distribution\n    for (const test of this.tests) {\n      this.gradeDistribution[test.finalGrade] = (this.gradeDistribution[test.finalGrade] || 0) + 1;\n    }\n  }\n  ngAfterViewInit() {\n    const ctx = this.chartRef.nativeElement.getContext('2d');\n    new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: Object.keys(this.gradeDistribution),\n        datasets: [{\n          data: Object.values(this.gradeDistribution),\n          backgroundColor: ['#4CAF50', '#FFC107', '#FF5722', '#9C27B0', '#03A9F4'],\n          hoverBackgroundColor: ['#a3d081', '#FFCB69', '#FF6F61', '#AB83A1', '#6BB5CE'],\n          borderColor: ['#FFFFFF'],\n          borderWidth: 2\n        }]\n      },\n      options: {\n        responsive: true,\n        legend: {\n          display: true,\n          position: 'right',\n          labels: {\n            fontColor: '#333',\n            fontSize: 14,\n            padding: 20\n          }\n        },\n        tooltips: {\n          enabled: true,\n          backgroundColor: '#FFF',\n          titleFontSize: 16,\n          titleFontColor: '#333',\n          bodyFontColor: '#333',\n          bodyFontSize: 14,\n          borderColor: '#555',\n          borderWidth: 1,\n          xPadding: 15,\n          yPadding: 15\n        }\n      }\n    });\n  }\n  static #_ = this.ɵfac = function UserTestResultView_Factory(t) {\n    return new (t || UserTestResultView)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserTestResultView,\n    selectors: [[\"app-user-test-result-view\"]],\n    viewQuery: function UserTestResultView_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartRef = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 1,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"text-center\", \"mb-4\"], [1, \"row\", \"mt-5\", \"mr-5\"], [1, \"col-md-6\"], [1, \"table\", \"table-bordered\", \"table-hover\", \"dashboard-table\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-6\", \"mt-5\", \"ml-5\"], [\"gradePieChart\", \"\"], [\"scope\", \"row\"]],\n    template: function UserTestResultView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Test Results Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"table\", 4)(6, \"thead\", 5)(7, \"tr\")(8, \"th\", 6);\n        i0.ɵɵtext(9, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\", 6);\n        i0.ɵɵtext(11, \"Level\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\", 6);\n        i0.ɵɵtext(13, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\", 6);\n        i0.ɵɵtext(15, \"Topic\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\", 6);\n        i0.ɵɵtext(17, \"Final Grade\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"tbody\");\n        i0.ɵɵtemplate(19, UserTestResultView_tr_19_Template, 11, 5, \"tr\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 8);\n        i0.ɵɵelement(21, \"canvas\", null, 9);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tests);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\".dashboard-table[_ngcontent-%COMP%] {\\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  thead.thead-dark[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #343a40;\\n    color: white;\\n  }\\n  \\n  tr[_ngcontent-%COMP%]:hover {\\n    background-color: #f2f2f2;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlldy91c2VyL3VzZXJUZXN0UmVzdWx0Vmlldy91c2VyVGVzdFJlc3VsdFZpZXclMjAuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMENBQTBDO0VBQzVDOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQtdGFibGUge1xuICAgIGJveC1zaGFkb3c6IDBweCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgfVxuICBcbiAgdGhlYWQudGhlYWQtZGFyayB0aCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgXG4gIHRyOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Chart","registerables","i0","register","UserTestResultView","constructor","id","level","name","topic","finalGrade","ngOnInit","test","tests","gradeDistribution","ngAfterViewInit","ctx","chartRef","nativeElement","getContext","type","data","labels","Object","keys","datasets","values","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","options","responsive","legend","display","position","fontColor","fontSize","padding","tooltips","enabled","titleFontSize","titleFontColor","bodyFontColor","bodyFontSize","xPadding","yPadding","selectors","viewQuery"],"sourceRoot":"","sources":["/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTestResultView/userTestResultView .ts","/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTestResultView/userTestResultView .html"],"sourcesContent":["import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\n\n@Component({\n  selector: 'app-user-test-result-view',\n  templateUrl: './userTestResultView .html',\n  styleUrls: ['./userTestResultView .css']\n})\nexport class UserTestResultView {\n  tests = [\n    { id: 1, level: 'Beginner', name: 'Math 101', topic: 'Algebra', finalGrade: 'A' },\n    { id: 2, level: 'Intermediate', name: 'Science 201', topic: 'Physics', finalGrade: 'B' },\n    { id: 3, level: 'Advanced', name: 'CS 301', topic: 'Physics', finalGrade: 'B' },\n    { id: 4, level: 'Intermediate', name: 'Science 201', topic: 'Physics', finalGrade: 'B' },\n    { id: 5, level: 'Advanced', name: 'Science 201', topic: 'Physics', finalGrade: 'B' },\n    { id: 6, level: 'Intermediate', name: 'Science 201', topic: 'Physics', finalGrade: 'B' },\n    { id: 7, level: 'Beginner', name: 'Science 201', topic: 'Physics', finalGrade: 'B' },\n    // ... more tests\n  ];\n  gradeDistribution = { 'A': 0, 'B': 0, 'C': 0, 'D': 0, 'F': 0 };\n\n  @ViewChild('gradePieChart') chartRef!: ElementRef;\n\n  ngOnInit() {\n    // Initialize grade distribution\n    for (const test of this.tests) {\n      this.gradeDistribution[test.finalGrade as keyof typeof this.gradeDistribution] = (this.gradeDistribution[test.finalGrade as keyof typeof this.gradeDistribution] || 0) + 1;\n    }\n  }\n\n  ngAfterViewInit() {\n    const ctx = this.chartRef.nativeElement.getContext('2d');\n    new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: Object.keys(this.gradeDistribution),\n        datasets: [{\n          data: Object.values(this.gradeDistribution),\n          backgroundColor: ['#4CAF50', '#FFC107', '#FF5722', '#9C27B0', '#03A9F4'],\n          hoverBackgroundColor: ['#a3d081', '#FFCB69', '#FF6F61', '#AB83A1', '#6BB5CE'],\n          borderColor: ['#FFFFFF'],\n          borderWidth: 2\n        }]\n      },\n      options: {\n        responsive: true,\n        legend: {\n          display: true,\n          position: 'right',\n          labels: {\n            fontColor: '#333',\n            fontSize: 14,\n            padding: 20\n          }\n        },\n        tooltips: {\n          enabled: true,\n          backgroundColor: '#FFF',\n          titleFontSize: 16,\n          titleFontColor: '#333',\n          bodyFontColor: '#333',\n          bodyFontSize: 14,\n          borderColor: '#555',\n          borderWidth: 1,\n          xPadding: 15,\n          yPadding: 15\n        }\n      }\n    } as any);\n  }\n  \n}\n","<div class=\"container mt-5\">\n    <h1 class=\"text-center mb-4\">Test Results Dashboard</h1>\n    <div class=\"row mt-5 mr-5\">\n      <!-- Test Results Table Section -->\n      <div class=\"col-md-6\">\n        <table class=\"table table-bordered table-hover dashboard-table\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Level</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Topic</th>\n              <th scope=\"col\">Final Grade</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let test of tests\">\n              <th scope=\"row\">{{ test.id }}</th>\n              <td>{{ test.level }}</td>\n              <td>{{ test.name }}</td>\n              <td>{{ test.topic }}</td>\n              <td>{{ test.finalGrade }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  \n      <!-- Pie Chart Section -->\n      <div class=\"col-md-6 mt-5 ml-5\">\n        <canvas #gradePieChart></canvas>\n      </div>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}