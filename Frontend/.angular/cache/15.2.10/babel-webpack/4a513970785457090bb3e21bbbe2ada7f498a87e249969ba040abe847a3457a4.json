{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/test-service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserTakeTestView_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"label\", 7);\n    i0.ɵɵtext(3, \" \\u00B7 You have 20 minutes to complete the test.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 8);\n    i0.ɵɵtext(5, \" \\u00B7 Once you click the start button, the TIMER will start.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"label\", 8);\n    i0.ɵɵtext(7, \" \\u00B7 During the TEST process, you will not be able to pause or cancel.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 8);\n    i0.ɵɵtext(9, \" \\u00B7 After you start test, the clock will appear in the upper right corner.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 8);\n    i0.ɵɵtext(11, \" \\u00B7 When you answer the question, your answer is automatically SAVED.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"label\", 8);\n    i0.ɵɵtext(13, \" \\u00B7 Once you have completed all questions, please click the \\\"Submit\\\" button.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.startButton());\n    });\n    i0.ɵɵtext(16, \" Start \");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction UserTakeTestView_div_3_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function UserTakeTestView_div_3_div_21_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.selectedAnswers[ctx_r9.currentQuestionIndex] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const a_r8 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"answer\", ctx_r6.currentQuestionIndex, \"\");\n    i0.ɵɵpropertyInterpolate(\"id\", a_r8);\n    i0.ɵɵproperty(\"value\", a_r8)(\"ngModel\", ctx_r6.selectedAnswers[ctx_r6.currentQuestionIndex]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", a_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", a_r8, \" \");\n  }\n}\nfunction UserTakeTestView_div_3_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_3_div_25_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.checkAnswer());\n    });\n    i0.ɵɵelementStart(1, \"button\", 32);\n    i0.ɵɵtext(2, \" Submit \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserTakeTestView_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h1\", 12);\n    i0.ɵɵtext(2, \"Test Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 13)(4, \"div\", 14)(5, \"h4\", 15);\n    i0.ɵɵtext(6, \" Time Remaining: \");\n    i0.ɵɵelementStart(7, \"span\", 16);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 17)(10, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_3_Template_div_click_10_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.previousButton());\n    });\n    i0.ɵɵelementStart(11, \"button\", 19);\n    i0.ɵɵelement(12, \"i\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 21)(14, \"div\", 22)(15, \"h4\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"h5\");\n    i0.ɵɵtext(18, \"Please choose correct answer\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 23)(20, \"div\", 24);\n    i0.ɵɵtemplate(21, UserTakeTestView_div_3_div_21_Template, 4, 6, \"div\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_3_Template_div_click_22_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.nextButton());\n    });\n    i0.ɵɵelementStart(23, \"button\", 19);\n    i0.ɵɵelement(24, \"i\", 26);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(25, UserTakeTestView_div_3_div_25_Template, 3, 0, \"div\", 27);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate3(\" \", ctx_r1.minutes, \":\", ctx_r1.seconds < 10 ? \"0\" : \"\", \"\", ctx_r1.seconds, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.currentQuestion.question);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.currentQuestion.answers);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentQuestionIndex == ctx_r1.questionList.length - 1);\n  }\n}\nfunction UserTakeTestView_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"h1\", 34);\n    i0.ɵɵtext(2, \"Time's up!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h1\", 34);\n    i0.ɵɵtext(4, \"Test is submited. Well-done!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_4_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.checkAnswer());\n    });\n    i0.ɵɵtext(6, \"View Result\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserTakeTestView_div_5_div_10_tr_15_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 49);\n    i0.ɵɵelement(1, \"i\", 50);\n    i0.ɵɵtext(2, \" Correct \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_5_div_10_tr_15_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 51);\n    i0.ɵɵelement(1, \"i\", 52);\n    i0.ɵɵtext(2, \" Incorrect \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_5_div_10_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 46);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtemplate(10, UserTakeTestView_div_5_div_10_tr_15_span_10_Template, 3, 0, \"span\", 47);\n    i0.ɵɵtemplate(11, UserTakeTestView_div_5_div_10_tr_15_span_11_Template, 3, 0, \"span\", 48);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r22 = ctx.$implicit;\n    const i_r23 = ctx.index;\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r23 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r22.question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r21.selectedAnswers[i_r23]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r22.correctAnswer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r21.selectedAnswers[i_r23] == null ? null : ctx_r21.selectedAnswers[i_r23].trim().toLowerCase()) === (question_r22.correctAnswer == null ? null : question_r22.correctAnswer.trim().toLowerCase()));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r21.selectedAnswers[i_r23] == null ? null : ctx_r21.selectedAnswers[i_r23].trim().toLowerCase()) !== (question_r22.correctAnswer == null ? null : question_r22.correctAnswer.trim().toLowerCase()));\n  }\n}\nfunction UserTakeTestView_div_5_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 42)(2, \"thead\", 43)(3, \"tr\")(4, \"th\", 44);\n    i0.ɵɵtext(5, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 44);\n    i0.ɵɵtext(7, \"Question\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 44);\n    i0.ɵɵtext(9, \"Your Answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 44);\n    i0.ɵɵtext(11, \"Correct Answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 44);\n    i0.ɵɵtext(13, \"Status\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, UserTakeTestView_div_5_div_10_tr_15_Template, 12, 6, \"tr\", 45);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.questionList);\n  }\n}\nfunction UserTakeTestView_div_5_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \" No answers have been submitted. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 12);\n    i0.ɵɵtext(2, \"Test Results\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 36)(4, \"div\", 37)(5, \"h4\", 38);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 39)(8, \"h4\", 38);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, UserTakeTestView_div_5_div_10_Template, 16, 1, \"div\", 40);\n    i0.ɵɵtemplate(11, UserTakeTestView_div_5_ng_template_11_Template, 2, 0, \"ng-template\", null, 41, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r19 = i0.ɵɵreference(12);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" Total Corrected Answers: \", ctx_r3.correctAnswersCount, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Final Grade: \", ctx_r3.correctAnswersCount / ctx_r3.questionList.length * 100, \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.selectedAnswers.length > 0)(\"ngIfElse\", _r19);\n  }\n}\nexport class UserTakeTestView {\n  constructor(router, cdRef, testService) {\n    this.router = router;\n    this.cdRef = cdRef;\n    this.testService = testService;\n    this.startTest = false;\n    this.currentQuestion = null;\n    this.currentQuestionIndex = -1;\n    this.questionList = [];\n    this.selectedAnswers = [];\n    this.correctAnswersCount = 0;\n    this.setId = -1;\n    // Timer var\n    this.remainingTime = 1 * 6; // 20 minutes in seconds\n    this.minutes = 0;\n    this.seconds = 0;\n    this.finishTest = false;\n    let question = {\n      questionId: 1,\n      question: \"Char* string = 'Hello world';\\nprintf(\\\"%d\\\", sizeof(string))\",\n      answers: ['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'],\n      correctAnswer: 'D. I don\\'t known'\n    };\n    let question1 = {\n      questionId: 2,\n      question: \"How many data type are there in JavaScript)\",\n      answers: ['A. 5', 'B. 7', 'C. 6', 'D. None of the above'],\n      correctAnswer: 'D. None of the above'\n    };\n    let question2 = {\n      questionId: 3,\n      question: \"How many data type are there in C++)\",\n      answers: ['A. 3', 'B. 1', 'C. 5', 'D. 10'],\n      correctAnswer: 'C. 5'\n    };\n    this.questionList = [question, question1, question2, question1];\n    this.selectedAnswers = new Array(this.questionList.length).fill(null);\n  }\n  ngOnInit() {\n    this.setId = this.router.snapshot.params['tid'];\n    this.testName;\n  }\n  startButton() {\n    this.startTest = true;\n    this.currentQuestionIndex = 0;\n    this.currentQuestion = this.questionList[0];\n    this.updateDisplay();\n    this.startTimer();\n  }\n  nextButton() {\n    this.currentQuestionIndex++;\n    if (this.currentQuestionIndex >= this.questionList.length) {\n      this.currentQuestionIndex = this.questionList.length - 1;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    //this.cdRef.detectChanges();\n  }\n\n  previousButton() {\n    this.currentQuestionIndex--;\n    if (this.currentQuestionIndex <= -1) {\n      this.currentQuestionIndex = 0;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    //this.cdRef.detectChanges();\n  }\n\n  captureAnswer(event, questionIndex) {\n    this.selectedAnswers[questionIndex] = event.target.value;\n    //this.cdRef.detectChanges();\n  }\n\n  checkAnswer() {\n    this.startTest = false;\n    this.finishTest = true;\n    this.cdRef.detectChanges();\n    for (let i = 0; i < this.questionList.length; i++) {\n      const correctAnswer = this.questionList[i].correctAnswer;\n      console.log(correctAnswer);\n      if (correctAnswer && this.selectedAnswers[i] && correctAnswer.trim().toLowerCase() === this.selectedAnswers[i].trim().toLowerCase()) {\n        this.correctAnswersCount++;\n      }\n    }\n  }\n  startTimer() {\n    this.timerInterval = setInterval(() => {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n        this.updateDisplay();\n      } else {\n        clearInterval(this.timerInterval);\n        // Logic when timer reaches 0, e.g., submit test automatically\n      }\n    }, 1000);\n  }\n  updateDisplay() {\n    this.minutes = Math.floor(this.remainingTime / 60);\n    this.seconds = this.remainingTime % 60;\n  }\n  ngOnDestroy() {\n    clearInterval(this.timerInterval); // Clear the interval when component is destroyed\n  }\n  static #_ = this.ɵfac = function UserTakeTestView_Factory(t) {\n    return new (t || UserTakeTestView)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.TestService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserTakeTestView,\n    selectors: [[\"app-user-question-list-view\"]],\n    decls: 6,\n    vars: 4,\n    consts: [[1, \"container\", \"mt-4\"], [\"class\", \"row justify-content-center\", 4, \"ngIf\"], [\"class\", \"row justify-content-center\", \"style\", \"min-height: 400px\", 4, \"ngIf\"], [\"class\", \"time-up-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"row\", \"justify-content-center\"], [1, \"card\", \"mt-4\", 2, \"width\", \"850px\"], [1, \"h4\", \"m-2\", \"mt-4\"], [1, \"h4\", \"m-2\"], [1, \"row\", \"text-center\", \"justify-content-center\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", \"px-2\", \"m-4\", 2, \"width\", \"200px\", 3, \"click\"], [1, \"row\", \"justify-content-center\", 2, \"min-height\", \"400px\"], [1, \"text-center\"], [1, \"col-10\"], [1, \"timer-container\"], [1, \"timer-text\"], [1, \"timer-numbers\"], [1, \"row\", \"border\", \"border-dark\", \"rounded\", \"p-3\", \"mt-5\"], [1, \"col-2\", \"d-flex\", \"justify-content-center\", \"align-items-center\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\"], [1, \"bi\", \"bi-arrow-left\"], [1, \"col-8\"], [1, \"row\", \"mb-3\"], [1, \"row\"], [1, \"col-12\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [1, \"bi\", \"bi-arrow-right\"], [\"class\", \"d-flex justify-content-center\", 3, \"click\", 4, \"ngIf\"], [1, \"form-check\"], [\"type\", \"radio\", 1, \"form-check-input\", 3, \"name\", \"id\", \"value\", \"ngModel\", \"ngModelChange\"], [1, \"form-check-label\", 3, \"for\"], [1, \"d-flex\", \"justify-content-center\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\", 2, \"width\", \"150px\"], [1, \"time-up-container\"], [1, \"text-center\", \"time-up-text\"], [1, \"result-button\", 3, \"click\"], [1, \"container\", \"mt-5\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [1, \"alert-heading\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResults\", \"\"], [1, \"table\", \"table-striped\", \"result-table\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [\"class\", \"badge badge-success\", 4, \"ngIf\"], [\"class\", \"badge badge-danger\", 4, \"ngIf\"], [1, \"badge\", \"badge-success\"], [1, \"fa\", \"fa-check\"], [1, \"badge\", \"badge-danger\"], [1, \"fa\", \"fa-times\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"]],\n    template: function UserTakeTestView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0);\n        i0.ɵɵtemplate(2, UserTakeTestView_div_2_Template, 17, 0, \"div\", 1);\n        i0.ɵɵtemplate(3, UserTakeTestView_div_3_Template, 26, 6, \"div\", 2);\n        i0.ɵɵtemplate(4, UserTakeTestView_div_4_Template, 7, 0, \"div\", 3);\n        i0.ɵɵtemplate(5, UserTakeTestView_div_5_Template, 13, 4, \"div\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.startTest == false && ctx.finishTest == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.startTest == true && ctx.remainingTime > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.remainingTime <= 0 && ctx.startTest);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.finishTest);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n  }\\n  h1[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%] {\\n    color: #333;\\n  }\\n  .card[_ngcontent-%COMP%] {\\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2); \\n    border: 2px solid rgba(0, 0, 0, 0.1); \\n    border-radius: 15px; \\n    background-color: #ffffff; \\n    padding: 20px; \\n    margin: 15px auto; \\n  }\\n  \\n  label.h4[_ngcontent-%COMP%] {\\n    color: #0f0e0e;\\n    margin: 20px;\\n  }\\n  button[_ngcontent-%COMP%] {\\n    transition: background-color 0.3s ease;\\n  }\\n  button[_ngcontent-%COMP%]:hover {\\n    background-color: #007bff;\\n  }\\n  .border-dark.rounded[_ngcontent-%COMP%] {\\n    background-color: #f9f9f9;\\n    border: 2px solid #ddd;\\n    border-radius: 10px;\\n    padding: 20px;\\n  }\\n  .result-table[_ngcontent-%COMP%] {\\n    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.15);\\n    border-collapse: collapse;\\n    margin: 20px 0;\\n  }\\n  \\n  .thead-dark[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #343a40;\\n    color: white;\\n  }\\n  \\n  .badge[_ngcontent-%COMP%] {\\n    padding: 0.4em 0.6em;\\n    font-size: 0.8em;\\n  }\\n  \\n  .badge-success[_ngcontent-%COMP%] {\\n    background-color: green;\\n  }\\n  \\n  .badge-danger[_ngcontent-%COMP%] {\\n    background-color: red;\\n  }\\n  \\n  .fa-check[_ngcontent-%COMP%], .fa-times[_ngcontent-%COMP%] {\\n    margin-right: 5px;\\n  }\\n  .alert[_ngcontent-%COMP%] {\\n    border-radius: 10px; \\n  }\\n  \\n  .alert-heading[_ngcontent-%COMP%] {\\n    font-weight: bold; \\n    text-shadow: 1px 1px 2px rgba(53, 51, 51, 0.1); \\n  }\\n  .timer-container[_ngcontent-%COMP%] {\\n    display: inline-flex; \\n    padding: 10px;\\n    margin-left: 750px;\\n    background-color: #d2c0c0;  \\n    border-radius: 10px;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .timer-text[_ngcontent-%COMP%] {\\n    font-size: 20px;  \\n    font-weight: 600;  \\n    text-transform: uppercase;  \\n    margin: 0;\\n    color: #333;  \\n  }\\n  \\n  .timer-numbers[_ngcontent-%COMP%] {\\n    color: #e44d26;  \\n    font-size: 28px;  \\n  }\\n  .time-up-container[_ngcontent-%COMP%] {\\n    text-align: center;\\n    background-color: rgba(0, 0, 0, 0.1);\\n    padding: 50px;\\n    margin-top: 50px;\\n    border-radius: 15px;\\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\\n  }\\n  \\n  .time-up-text[_ngcontent-%COMP%] {\\n    font-size: 36px;\\n    font-weight: 400;\\n    color: #333;\\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\\n  }\\n  \\n  .result-button[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    padding: auto;\\n    border: none;\\n    border-radius: 50px;\\n    background: linear-gradient(45deg, #2196F3, #21CBF3);\\n    color: white;\\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\\n    cursor: pointer;\\n    transition: all 0.3s ease;\\n  }\\n  \\n  .result-button[_ngcontent-%COMP%]:hover {\\n    background: linear-gradient(45deg, #21CBF3, #2196F3);\\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\\n  }\\n    .result-button {\\n    padding: 15px 30px;\\n    width: auto !important; \\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlldy91c2VyL3VzZXJUYWtlVGVzdFZpZXcvdXNlclRha2VUZXN0Vmlldy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEI7RUFDaEM7RUFDQTtJQUNFLFdBQVc7RUFDYjtFQUNBO0lBQ0UsK0NBQStDLEVBQUUsbUNBQW1DO0lBQ3BGLG9DQUFvQyxFQUFFLDJDQUEyQztJQUNqRixtQkFBbUIsRUFBRSxvQkFBb0I7SUFDekMseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3RELGFBQWEsRUFBRSwrQ0FBK0M7SUFDOUQsaUJBQWlCLEVBQUUsbUNBQW1DO0VBQ3hEOztFQUVBO0lBQ0UsY0FBYztJQUNkLFlBQVk7RUFDZDtFQUNBO0lBQ0Usc0NBQXNDO0VBQ3hDO0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7RUFDQTtJQUNFLHlCQUF5QjtJQUN6QixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGFBQWE7RUFDZjtFQUNBO0lBQ0UsNENBQTRDO0lBQzVDLHlCQUF5QjtJQUN6QixjQUFjO0VBQ2hCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLG9CQUFvQjtJQUNwQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSx1QkFBdUI7RUFDekI7O0VBRUE7SUFDRSxxQkFBcUI7RUFDdkI7O0VBRUE7O0lBRUUsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxtQkFBbUIsRUFBRSxvQkFBb0I7RUFDM0M7O0VBRUE7SUFDRSxpQkFBaUIsRUFBRSxjQUFjO0lBQ2pDLDhDQUE4QyxFQUFFLDBCQUEwQjtFQUM1RTtFQUNBO0lBQ0Usb0JBQW9CLEVBQUUsbURBQW1EO0lBQ3pFLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIseUJBQXlCLEdBQUcsMEJBQTBCO0lBQ3RELG1CQUFtQjtJQUNuQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSxlQUFlLEdBQUcsdUJBQXVCO0lBQ3pDLGdCQUFnQixHQUFHLGNBQWM7SUFDakMseUJBQXlCLEdBQUcsOEJBQThCO0lBQzFELFNBQVM7SUFDVCxXQUFXLEdBQUcsNkJBQTZCO0VBQzdDOztFQUVBO0lBQ0UsY0FBYyxHQUFHLHdEQUF3RDtJQUN6RSxlQUFlLEdBQUcsOEJBQThCO0VBQ2xEO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsb0NBQW9DO0lBQ3BDLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLHlDQUF5QztFQUMzQzs7RUFFQTtJQUNFLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLDJDQUEyQztFQUM3Qzs7RUFFQTtJQUNFLGVBQWU7SUFDZixhQUFhO0lBQ2IsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixvREFBb0Q7SUFDcEQsWUFBWTtJQUNaLHlDQUF5QztJQUN6QyxlQUFlO0lBQ2YseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0Usb0RBQW9EO0lBQ3BELHlDQUF5QztFQUMzQztFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHNCQUFzQixFQUFFLHVDQUF1QztFQUNqRSIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgfVxuICBoMSwgaDQsIGg1IHtcbiAgICBjb2xvcjogIzMzMztcbiAgfVxuICAuY2FyZCB7XG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAxNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMik7IC8qIEltcHJvdmVkIHNoYWRvdyBmb3IgbW9yZSBkZXB0aCAqL1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTsgLyogVHJhbnNwYXJlbnQgYm9yZGVyIGZvciBzbW9vdGggYmxlbmRpbmcgKi9cbiAgICBib3JkZXItcmFkaXVzOiAxNXB4OyAvKiBSb3VuZGVkIGNvcm5lcnMgKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOyAvKiBDbGVhbiB3aGl0ZSBiYWNrZ3JvdW5kICovXG4gICAgcGFkZGluZzogMjBweDsgLyogSW50ZXJuYWwgcGFkZGluZyBmb3IgYmV0dGVyIHRleHQgYWxpZ25tZW50ICovXG4gICAgbWFyZ2luOiAxNXB4IGF1dG87IC8qIENlbnRlciB0aGUgY2FyZCBhbmQgYWRkIG1hcmdpbiAqL1xuICB9XG4gIFxuICBsYWJlbC5oNCB7XG4gICAgY29sb3I6ICMwZjBlMGU7XG4gICAgbWFyZ2luOiAyMHB4O1xuICB9XG4gIGJ1dHRvbiB7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XG4gIH1cbiAgYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICB9XG4gIC5ib3JkZXItZGFyay5yb3VuZGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNkZGQ7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG4gIC5yZXN1bHQtdGFibGUge1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gIH1cbiAgXG4gIC50aGVhZC1kYXJrIHRoIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBcbiAgLmJhZGdlIHtcbiAgICBwYWRkaW5nOiAwLjRlbSAwLjZlbTtcbiAgICBmb250LXNpemU6IDAuOGVtO1xuICB9XG4gIFxuICAuYmFkZ2Utc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG4gIH1cbiAgXG4gIC5iYWRnZS1kYW5nZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgfVxuICBcbiAgLmZhLWNoZWNrLFxuICAuZmEtdGltZXMge1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICB9XG4gIC5hbGVydCB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogUm91bmRlZCBjb3JuZXJzICovXG4gIH1cbiAgXG4gIC5hbGVydC1oZWFkaW5nIHtcbiAgICBmb250LXdlaWdodDogYm9sZDsgLyogQm9sZCB0ZXh0ICovXG4gICAgdGV4dC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoNTMsIDUxLCA1MSwgMC4xKTsgLyogVGV4dCBzaGFkb3cgZm9yIGRlcHRoICovXG4gIH1cbiAgLnRpbWVyLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7IC8qIE1ha2UgdGhlIGNvbnRhaW5lciBvbmx5IGFzIHdpZGUgYXMgaXRzIGNvbnRlbnQgKi9cbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA3NTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJjMGMwOyAgLyogTGlnaHQgZ3JleSBiYWNrZ3JvdW5kICovXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICB9XG4gIFxuICAudGltZXItdGV4dCB7XG4gICAgZm9udC1zaXplOiAyMHB4OyAgLyogSW5jcmVhc2UgZm9udCBzaXplICovXG4gICAgZm9udC13ZWlnaHQ6IDYwMDsgIC8qIEJvbGQgdGV4dCAqL1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7ICAvKiBDb252ZXJ0IHRleHQgdG8gdXBwZXJjYXNlICovXG4gICAgbWFyZ2luOiAwO1xuICAgIGNvbG9yOiAjMzMzOyAgLyogRGFyayBncmV5IGNvbG9yIGZvciB0ZXh0ICovXG4gIH1cbiAgXG4gIC50aW1lci1udW1iZXJzIHtcbiAgICBjb2xvcjogI2U0NGQyNjsgIC8qIE9yYW5nZSBjb2xvciBmb3IgdGhlIG51bWJlcnMgdG8gbWFrZSB0aGVtIHN0YW5kIG91dCAqL1xuICAgIGZvbnQtc2l6ZTogMjhweDsgIC8qIE1ha2UgbnVtYmVycyBhIGJpdCBsYXJnZXIgKi9cbiAgfVxuICAudGltZS11cC1jb250YWluZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgcGFkZGluZzogNTBweDtcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgYm94LXNoYWRvdzogMCA0cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIH1cbiAgXG4gIC50aW1lLXVwLXRleHQge1xuICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIHRleHQtc2hhZG93OiAycHggMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIH1cbiAgXG4gIC5yZXN1bHQtYnV0dG9uIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgcGFkZGluZzogYXV0bztcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICMyMTk2RjMsICMyMUNCRjMpO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3gtc2hhZG93OiAwIDRweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgfVxuICBcbiAgLnJlc3VsdC1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgIzIxQ0JGMywgIzIxOTZGMyk7XG4gICAgYm94LXNoYWRvdzogMCA2cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIH1cbiAgOjpuZy1kZWVwIC5yZXN1bHQtYnV0dG9uIHtcbiAgICBwYWRkaW5nOiAxNXB4IDMwcHg7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDsgLyogRm9yY2Ugb3ZlcnJpZGUgYW55IGV4aXN0aW5nIHN0eWxlcyAqL1xuICB9XG4gIFxuICAgIFxuICBcbiAgICAgICAgICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","UserTakeTestView","constructor","router","cdRef","testService","question","questionId","answers","correctAnswer","question1","question2","questionList","selectedAnswers","Array","length","fill","ngOnInit","setId","snapshot","params","testName","startButton","startTest","currentQuestionIndex","currentQuestion","updateDisplay","startTimer","nextButton","previousButton","captureAnswer","event","questionIndex","target","value","checkAnswer","finishTest","detectChanges","i","console","log","trim","toLowerCase","correctAnswersCount","timerInterval","setInterval","remainingTime","clearInterval","minutes","Math","floor","seconds","ngOnDestroy","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTakeTestView/userTakeTestView.html","/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTakeTestView/userTakeTestView.ts"],"sourcesContent":["<body>\n  <div class=\"container mt-4\">\n    <div\n      class=\"row justify-content-center\"\n      *ngIf=\"startTest == false && finishTest== false\"\n    >\n      <div class=\"card mt-4\" style=\"width: 850px\">\n        <label class=\"h4 m-2 mt-4\">\n          · You have 20 minutes to complete the test.</label\n        >\n        <label class=\"h4 m-2\">\n          · Once you click the start button, the TIMER will start.</label\n        >\n        <label class=\"h4 m-2\">\n          · During the TEST process, you will not be able to pause or\n          cancel.</label\n        >\n        <label class=\"h4 m-2\">\n          · After you start test, the clock will appear in the upper right\n          corner.</label\n        >\n        <label class=\"h4 m-2\">\n          · When you answer the question, your answer is automatically\n          SAVED.</label\n        >\n        <label class=\"h4 m-2\">\n          · Once you have completed all questions, please click the \"Submit\"\n          button.</label\n        >\n        <div class=\"row text-center justify-content-center\">\n          <button\n            class=\"btn btn-primary btn-lg px-2 m-4\"\n            style=\"width: 200px\"\n            (click)=\"startButton()\"\n          >\n            Start\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div\n      class=\"row justify-content-center\"\n      style=\"min-height: 400px\"\n      *ngIf=\"startTest == true && remainingTime > 0\"\n    >\n      <h1 class=\"text-center\">Test Name</h1>\n      <div class=\"col-10\">\n        <div class=\"timer-container\">\n          <h4 class=\"timer-text\">\n            Time Remaining:\n            <span class=\"timer-numbers\">\n              {{ minutes }}:{{ seconds < 10 ? '0' : '' }}{{ seconds }}\n            </span>\n          </h4>\n        </div>\n\n        <div class=\"row border border-dark rounded p-3 mt-5\">\n          <!-- Previous Button -->\n          <div\n            class=\"col-2 d-flex justify-content-center align-items-center\"\n            (click)=\"previousButton()\"\n          >\n            <button class=\"btn btn-secondary btn-sm\">\n              <i class=\"bi bi-arrow-left\"></i>\n            </button>\n          </div>\n\n          <!-- Question and Answers -->\n          <div class=\"col-8\">\n            <!-- Question -->\n            <div class=\"row mb-3\">\n              <h4>{{currentQuestion.question}}</h4>\n              <h5>Please choose correct answer</h5>\n            </div>\n\n            <!-- Answers -->\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div\n                  class=\"form-check\"\n                  *ngFor=\"let a of currentQuestion.answers\"\n                >\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"answer{{currentQuestionIndex}}\"\n                    id=\"{{a}}\"\n                    [value]=\"a\"\n                    [(ngModel)]=\"selectedAnswers[currentQuestionIndex]\"\n                  />\n                  <label class=\"form-check-label\" for=\"{{a}}\"> {{a}} </label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Next Button -->\n          <div\n            class=\"col-2 d-flex justify-content-center align-items-center\"\n            (click)=\"nextButton()\"\n          >\n            <button class=\"btn btn-secondary btn-sm\">\n              <i class=\"bi bi-arrow-right\"></i>\n            </button>\n          </div>\n          <!-- Submit Button -->\n          <div\n            class=\"d-flex justify-content-center\"\n            (click)=\"checkAnswer()\"\n            *ngIf=\"currentQuestionIndex == questionList.length-1\"\n          >\n            <button class=\"btn btn-secondary btn-sm\" style=\"width: 150px\">\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"remainingTime <= 0 && startTest\" class=\"time-up-container\">\n      <h1 class=\"text-center time-up-text\">Time's up!</h1>\n      <h1 class=\"text-center time-up-text\">Test is submited. Well-done!</h1>\n      <button class=\"result-button\" (click)=\"checkAnswer()\">View Result</button>\n    </div>\n\n    <div *ngIf=\"finishTest\">\n      <h1 class=\"text-center\">Test Results</h1>\n\n      <div class=\"container mt-5\">\n        <div class=\"alert alert-success\" role=\"alert\">\n          <h4 class=\"alert-heading\">\n            Total Corrected Answers: {{correctAnswersCount}}\n          </h4>\n        </div>\n        <div class=\"alert alert-info\" role=\"alert\">\n          <h4 class=\"alert-heading\">\n            Final Grade: {{correctAnswersCount / questionList.length * 100}}%\n          </h4>\n        </div>\n        <div *ngIf=\"selectedAnswers.length > 0; else noResults\">\n          <table class=\"table table-striped result-table\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Question</th>\n                <th scope=\"col\">Your Answer</th>\n                <th scope=\"col\">Correct Answer</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let question of questionList; let i = index\">\n                <th scope=\"row\">{{ i + 1 }}</th>\n                <td>{{ question.question }}</td>\n                <td>{{ selectedAnswers[i] }}</td>\n                <td>{{ question.correctAnswer }}</td>\n                <td>\n                  <span\n                    *ngIf=\"selectedAnswers[i]?.trim().toLowerCase() === question.correctAnswer?.trim().toLowerCase()\"\n                    class=\"badge badge-success\"\n                  >\n                    <i class=\"fa fa-check\"></i> Correct\n                  </span>\n                  <span\n                    *ngIf=\"selectedAnswers[i]?.trim().toLowerCase() !== question.correctAnswer?.trim().toLowerCase()\"\n                    class=\"badge badge-danger\"\n                  >\n                    <i class=\"fa fa-times\"></i> Incorrect\n                  </span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <ng-template #noResults>\n          <div class=\"alert alert-warning\" role=\"alert\">\n            No answers have been submitted.\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</body>\n","import {Component, OnInit, ChangeDetectorRef} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Test } from 'src/app/model/Test';\nimport { TestService } from 'src/app/service/test-service';\n\n@Component({\n  selector: 'app-user-question-list-view',\n  templateUrl: './userTakeTestView.html',\n  styleUrls: ['./userTakeTestView.css']\n})\nexport class UserTakeTestView implements OnInit\n{\n  startTest:boolean = false;\n  currentQuestion:any = null;\n  currentQuestionIndex:number = -1;\n  questionList:any = [];\n  selectedAnswers: any[] = [];\n  correctAnswersCount:number = 0;\n  setId:number = -1;\n  currentTest:Test;\n  // Timer var\n  remainingTime: number = 1 * 6; // 20 minutes in seconds\n  timerInterval: any;\n  minutes: number = 0;\n  seconds: number = 0;\n  finishTest:boolean = false;\n\n  constructor(private router:ActivatedRoute, private cdRef:ChangeDetectorRef, private testService:TestService )\n  {\n    let question = {questionId:1, question:\"Char* string = 'Hello world';\\nprintf(\\\"%d\\\", sizeof(string))\",\n      answers:['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'], correctAnswer:'D. I don\\'t known'}\n    let question1 = {questionId:2, question:\"How many data type are there in JavaScript)\",\n      answers:['A. 5', 'B. 7', 'C. 6', 'D. None of the above'], correctAnswer:'D. None of the above'}\n    let question2 = {questionId:3, question:\"How many data type are there in C++)\",\n      answers:['A. 3', 'B. 1', 'C. 5', 'D. 10'], correctAnswer:'C. 5'}\n      this.questionList = [question,question1,question2,question1] ;\n      this.selectedAnswers = new Array(this.questionList.length).fill(null);\n  }\n\n  ngOnInit(): void\n  {\n    this.setId = this.router.snapshot.params['tid'];\n    this.testName\n  }\n\n  startButton()\n  {\n    this.startTest = true;\n    this.currentQuestionIndex = 0;\n    this.currentQuestion = this.questionList[0];\n    this.updateDisplay();\n    this.startTimer();\n\n  }\n  nextButton()\n  {\n    this.currentQuestionIndex++;\n    if(this.currentQuestionIndex >= this.questionList.length)\n    {\n      this.currentQuestionIndex = this.questionList.length - 1;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    //this.cdRef.detectChanges();\n  }\n\n  previousButton()\n  {\n    this.currentQuestionIndex--;\n    if(this.currentQuestionIndex <= -1)\n    {\n      this.currentQuestionIndex = 0;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    //this.cdRef.detectChanges();\n  }\n  captureAnswer(event: any, questionIndex: number)\n  {\n    this.selectedAnswers[questionIndex] = event.target.value;\n    //this.cdRef.detectChanges();\n  }\n  checkAnswer()\n  {\n    this.startTest = false;\n    this.finishTest = true;\n    this.cdRef.detectChanges();\n    for (let i = 0; i < this.questionList.length; i++) \n    {\n      const correctAnswer:string = this.questionList[i].correctAnswer;\n      console.log(correctAnswer);\n      if (correctAnswer && this.selectedAnswers[i] && correctAnswer.trim().toLowerCase() === this.selectedAnswers[i].trim().toLowerCase()) {\n        this.correctAnswersCount++;\n      }\n    }\n  }\n  startTimer() {\n    this.timerInterval = setInterval(() => {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n        this.updateDisplay();\n      } else {\n        clearInterval(this.timerInterval);\n        // Logic when timer reaches 0, e.g., submit test automatically\n      }\n    }, 1000);\n  }\n  updateDisplay()\n  {\n    this.minutes = Math.floor(this.remainingTime / 60);\n    this.seconds = this.remainingTime % 60;\n  }\n  ngOnDestroy() \n  {\n    clearInterval(this.timerInterval); // Clear the interval when component is destroyed\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}