{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction UserTakeTestView_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"label\", 5);\n    i0.ɵɵtext(3, \" \\u00B7 You have 20 minutes to complete the test.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 6);\n    i0.ɵɵtext(5, \" \\u00B7 Once you click the start button, the TIMER will start.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"label\", 6);\n    i0.ɵɵtext(7, \" \\u00B7 During the TEST process, you will not be able to pause or cancel.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 6);\n    i0.ɵɵtext(9, \" \\u00B7 After you start test, the clock will appear in the upper right corner.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 6);\n    i0.ɵɵtext(11, \" \\u00B7 When you answer the question, your answer is automatically SAVED.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"label\", 6);\n    i0.ɵɵtext(13, \" \\u00B7 Once you have completed all questions, please click the \\\"Submit\\\" button.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 7)(15, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_1_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.startButton());\n    });\n    i0.ɵɵtext(16, \"Start\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction UserTakeTestView_div_2_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"input\", 24);\n    i0.ɵɵelementStart(2, \"label\", 25);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const a_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", a_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", a_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", a_r5, \" \");\n  }\n}\nfunction UserTakeTestView_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10);\n    i0.ɵɵtext(2, \" Question List \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"div\", 12);\n    i0.ɵɵtext(5, \" clock \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 13)(7, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_Template_div_click_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.previousButton());\n    });\n    i0.ɵɵelementStart(8, \"button\", 15);\n    i0.ɵɵelement(9, \"i\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 17)(11, \"div\", 18)(12, \"h4\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"h5\");\n    i0.ɵɵtext(15, \"Please choose correct answer\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 19)(17, \"div\", 20);\n    i0.ɵɵtemplate(18, UserTakeTestView_div_2_div_18_Template, 4, 3, \"div\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_Template_div_click_19_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.nextButton());\n    });\n    i0.ɵɵelementStart(20, \"button\", 15);\n    i0.ɵɵelement(21, \"i\", 22);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵtextInterpolate(ctx_r1.currentQuestion.question);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.currentQuestion.answers);\n  }\n}\nexport class UserTakeTestView {\n  constructor(router) {\n    this.router = router;\n    this.startTest = false;\n    this.currentQuestion = null;\n    this.currentQuestionIndex = -1;\n    this.questionList = [];\n    this.setId = -1;\n    let question = {\n      questionId: 1,\n      question: \"Char* string = 'Hello world';\\nprintf(\\\"%d\\\", sizeof(string))\",\n      answers: ['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'],\n      correctAnswer: ['D. I don\\'t known']\n    };\n    let question1 = {\n      questionId: 1,\n      question: \"How many data type are there in JavaScript)\",\n      answers: ['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'],\n      correctAnswer: ['D. I don\\'t known']\n    };\n    this.questionList = [question, question1, question, question1];\n  }\n  ngOnInit() {\n    this.setId = this.router.snapshot.params['tid'];\n  }\n  startButton() {\n    this.startTest = true;\n    this.currentQuestionIndex = 1;\n    this.currentQuestion = this.questionList[0];\n  }\n  nextButton() {\n    this.currentQuestionIndex++;\n    if (this.currentQuestionIndex >= this.questionList.length) {\n      this.currentQuestionIndex = this.questionList.length - 1;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n  }\n  previousButton() {\n    this.currentQuestionIndex--;\n    if (this.currentQuestionIndex <= -1) {\n      this.currentQuestionIndex = 0;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n  }\n  static #_ = this.ɵfac = function UserTakeTestView_Factory(t) {\n    return new (t || UserTakeTestView)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserTakeTestView,\n    selectors: [[\"app-user-question-list-view\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-4\"], [\"class\", \"row justify-content-center\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"min-height: 400px;\", 4, \"ngIf\"], [1, \"row\", \"justify-content-center\"], [1, \"card\", \"mt-4\", 2, \"width\", \"850px\"], [1, \"h4\", \"m-2\", \"mt-4\"], [1, \"h4\", \"m-2\"], [1, \"row\", \"text-center\", \"justify-content-center\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", \"px-2\", \"m-4\", 2, \"width\", \"200px\", 3, \"click\"], [1, \"row\", 2, \"min-height\", \"400px\"], [1, \"col-2\"], [1, \"col-10\"], [1, \"row\", \"justify-content-end\"], [1, \"row\", \"border\", \"rounded\", \"p-3\", \"mt-5\"], [1, \"col-2\", \"d-flex\", \"justify-content-center\", \"align-items-center\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\"], [1, \"bi\", \"bi-arrow-left\"], [1, \"col-8\"], [1, \"row\", \"mb-3\"], [1, \"row\"], [1, \"col-12\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [1, \"bi\", \"bi-arrow-right\"], [1, \"form-check\"], [\"type\", \"radio\", \"name\", \"answer\", 1, \"form-check-input\", 3, \"id\"], [1, \"form-check-label\", 3, \"for\"]],\n    template: function UserTakeTestView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, UserTakeTestView_div_1_Template, 17, 0, \"div\", 1);\n        i0.ɵɵtemplate(2, UserTakeTestView_div_2_Template, 22, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.startTest == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.startTest == true);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IAEEA,8BAAmE;IAEnCA,iEAA2C;IAAAA,iBAAQ;IAC/EA,gCAAsB;IAACA,8EAAwD;IAAAA,iBAAQ;IACvFA,gCAAsB;IAACA,yFAAmE;IAAAA,iBAAQ;IAClGA,gCAAsB;IAACA,8FAAwE;IAAAA,iBAAQ;IACvGA,iCAAsB;IAACA,0FAAmE;IAAAA,iBAAQ;IAClGA,iCAAsB;IAACA,mGAA0E;IAAAA,iBAAQ;IACzGA,+BAAoD;IACmBA;MAAAA;MAAA;MAAA,OAASA,mCAAa;IAAA,EAAC;IAACA,sBAAK;IAAAA,iBAAS;;;;;IAgCrGA,+BAAkE;IAChEA,4BAAuE;IACvEA,iCAA4C;IAC1CA,YACF;IAAAA,iBAAQ;;;;IAHmDA,eAAU;IAAVA,oCAAU;IACrCA,eAAW;IAAXA,qCAAW;IACzCA,eACF;IADEA,qCACF;;;;;;IA/BdA,8BAAsE;IAElEA,+BACF;IAAAA,iBAAM;IACNA,+BAAoB;IAEhBA,uBACF;IAAAA,iBAAM;IACNA,+BAAyC;IAE6BA;MAAAA;MAAA;MAAA,OAASA,sCAAgB;IAAA,EAAC;IAC5FA,kCAAyC;IACvCA,wBAAgC;IAClCA,iBAAS;IAIXA,gCAAmB;IAGXA,aAA4B;IAAAA,iBAAK;IACrCA,2BAAI;IAAAA,6CAA4B;IAAAA,iBAAK;IAIvCA,gCAAiB;IAEbA,0EAKM;IACRA,iBAAM;IAKVA,gCAA2F;IAAvBA;MAAAA;MAAA;MAAA,OAASA,kCAAY;IAAA,EAAC;IACxFA,mCAAyC;IACvCA,yBAAiC;IACnCA,iBAAS;;;;IArBHA,gBAA4B;IAA5BA,qDAA4B;IAOQA,eAA0B;IAA1BA,wDAA0B;;;ACnC9E,OAAM,MAAOC,gBAAgB;EAU3BC,YAAoBC,MAAqB;IAArB,WAAM,GAANA,MAAM;IAR1B,cAAS,GAAW,KAAK;IACzB,oBAAe,GAAO,IAAI;IAC1B,yBAAoB,GAAU,CAAC,CAAC;IAChC,iBAAY,GAAO,EAAE;IAGrB,UAAK,GAAU,CAAC,CAAC;IAIf,IAAIC,QAAQ,GAAG;MAACC,UAAU,EAAC,CAAC;MAAED,QAAQ,EAAC,+DAA+D;MACpGE,OAAO,EAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,mBAAmB,CAAC;MAAEC,aAAa,EAAC,CAAC,mBAAmB;IAAC,CAAC;IAC7F,IAAIC,SAAS,GAAG;MAACH,UAAU,EAAC,CAAC;MAAED,QAAQ,EAAC,6CAA6C;MACnFE,OAAO,EAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,mBAAmB,CAAC;MAAEC,aAAa,EAAC,CAAC,mBAAmB;IAAC,CAAC;IAC3F,IAAI,CAACE,YAAY,GAAG,CAACL,QAAQ,EAACI,SAAS,EAACJ,QAAQ,EAACI,SAAS,CAAC;EAC/D;EAEAE,QAAQ;IAEN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACR,MAAM,CAACS,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;EACjD;EAEAC,WAAW;IAET,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,oBAAoB,GAAG,CAAC;IAC7B,IAAI,CAACC,eAAe,GAAG,IAAI,CAACR,YAAY,CAAC,CAAC,CAAC;EAE7C;EACAS,UAAU;IAER,IAAI,CAACF,oBAAoB,EAAE;IAC3B,IAAG,IAAI,CAACA,oBAAoB,IAAI,IAAI,CAACP,YAAY,CAACU,MAAM,EACxD;MACE,IAAI,CAACH,oBAAoB,GAAG,IAAI,CAACP,YAAY,CAACU,MAAM,GAAG,CAAC;;IAE1D,IAAI,CAACF,eAAe,GAAG,IAAI,CAACR,YAAY,CAAC,IAAI,CAACO,oBAAoB,CAAC;EACrE;EAEAI,cAAc;IAEZ,IAAI,CAACJ,oBAAoB,EAAE;IAC3B,IAAG,IAAI,CAACA,oBAAoB,IAAI,CAAC,CAAC,EAClC;MACE,IAAI,CAACA,oBAAoB,GAAG,CAAC;;IAE/B,IAAI,CAACC,eAAe,GAAG,IAAI,CAACR,YAAY,CAAC,IAAI,CAACO,oBAAoB,CAAC;EACrE;EAAC;qBAjDUf,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAoB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDR7BzB,8BAA4B;QAE1BA,kEAYM;QAENA,kEA8CI;QA9DNA,iBAA4B;;;QAEeA,eAAwB;QAAxBA,6CAAwB;QAcpBA,eAAuB;QAAvBA,4CAAuB","names":["i0","UserTakeTestView","constructor","router","question","questionId","answers","correctAnswer","question1","questionList","ngOnInit","setId","snapshot","params","startButton","startTest","currentQuestionIndex","currentQuestion","nextButton","length","previousButton","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTakeTestView/userTakeTestView.html","/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTakeTestView/userTakeTestView.ts"],"sourcesContent":["<div class=\"container mt-4\">\n\n  <div class=\"row justify-content-center\" *ngIf=\"startTest == false\">\n    <div class=\"card mt-4\" style=\"width: 850px\">\n      <label class=\"h4 m-2 mt-4\"> · You have 20 minutes to complete the test.</label>\n      <label class=\"h4 m-2\"> · Once you click the start button, the TIMER will start.</label>\n      <label class=\"h4 m-2\"> · During the TEST process, you will not be able to pause or cancel.</label>\n      <label class=\"h4 m-2\"> · After you start test, the clock will appear in the upper right corner.</label>\n      <label class=\"h4 m-2\"> · When you answer the question, your answer is automatically SAVED.</label>\n      <label class=\"h4 m-2\"> · Once you have completed all questions, please click the \"Submit\" button.</label>\n      <div class=\"row text-center justify-content-center\">\n        <button class=\"btn btn-primary btn-lg px-2 m-4\" style=\"width: 200px\" (click)=\"startButton()\">Start</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\" style=\"min-height: 400px;\" *ngIf=\"startTest == true\">\n    <div class=\"col-2\">\n      Question List\n    </div>\n    <div class=\"col-10\">\n      <div class=\"row justify-content-end\">\n        clock\n      </div>\n      <div class=\"row border rounded p-3 mt-5\">\n        <!-- Previous Button -->\n        <div class=\"col-2 d-flex justify-content-center align-items-center\" (click)=\"previousButton()\">\n          <button class=\"btn btn-secondary btn-sm\">\n            <i class=\"bi bi-arrow-left\"></i>\n          </button>\n        </div>\n      \n        <!-- Question and Answers -->\n        <div class=\"col-8\">\n          <!-- Question -->\n          <div class=\"row mb-3\">\n            <h4>{{currentQuestion.question}}</h4>\n            <h5>Please choose correct answer</h5>\n          </div>\n      \n          <!-- Answers -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-check\" *ngFor=\"let a of currentQuestion.answers\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"answer\" id=\"{{a}}\" >\n                <label class=\"form-check-label\" for=\"{{a}}\">\n                  {{a}}\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n        <!-- Next Button -->\n        <div class=\"col-2 d-flex justify-content-center align-items-center\" (click)=\"nextButton()\">\n          <button class=\"btn btn-secondary btn-sm\">\n            <i class=\"bi bi-arrow-right\"></i>\n          </button>\n        </div>\n      </div>\n      \n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-question-list-view',\n  templateUrl: './userTakeTestView.html',\n  styleUrls: ['./userTakeTestView.css']\n})\nexport class UserTakeTestView implements OnInit\n{\n  startTest:boolean = false;\n  currentQuestion:any = null;\n  currentQuestionIndex:number = -1;\n  questionList:any = [];\n\n\n  setId:number = -1;\n\n  constructor(private router:ActivatedRoute )\n  {\n    let question = {questionId:1, question:\"Char* string = 'Hello world';\\nprintf(\\\"%d\\\", sizeof(string))\",\n      answers:['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'], correctAnswer:['D. I don\\'t known']}\n    let question1 = {questionId:1, question:\"How many data type are there in JavaScript)\",\n      answers:['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'], correctAnswer:['D. I don\\'t known']}\n      this.questionList = [question,question1,question,question1] ;\n  }\n\n  ngOnInit(): void\n  {\n    this.setId = this.router.snapshot.params['tid'];\n  }\n\n  startButton()\n  {\n    this.startTest = true;\n    this.currentQuestionIndex = 1;\n    this.currentQuestion = this.questionList[0];\n\n  }\n  nextButton()\n  {\n    this.currentQuestionIndex++;\n    if(this.currentQuestionIndex >= this.questionList.length)\n    {\n      this.currentQuestionIndex = this.questionList.length - 1;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n  }\n\n  previousButton()\n  {\n    this.currentQuestionIndex--;\n    if(this.currentQuestionIndex <= -1)\n    {\n      this.currentQuestionIndex = 0;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}