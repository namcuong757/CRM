{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction UserTakeTestView_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"label\", 6);\n    i0.ɵɵtext(3, \" \\u00B7 You have 20 minutes to complete the test.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 7);\n    i0.ɵɵtext(5, \" \\u00B7 Once you click the start button, the TIMER will start.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"label\", 7);\n    i0.ɵɵtext(7, \" \\u00B7 During the TEST process, you will not be able to pause or cancel.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 7);\n    i0.ɵɵtext(9, \" \\u00B7 After you start test, the clock will appear in the upper right corner.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 7);\n    i0.ɵɵtext(11, \" \\u00B7 When you answer the question, your answer is automatically SAVED.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"label\", 7);\n    i0.ɵɵtext(13, \" \\u00B7 Once you have completed all questions, please click the \\\"Submit\\\" button.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 8)(15, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_1_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.startButton());\n    });\n    i0.ɵɵtext(16, \" Start \");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction UserTakeTestView_div_2_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"input\", 25);\n    i0.ɵɵlistener(\"change\", function UserTakeTestView_div_2_div_19_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.captureAnswer($event, ctx_r9.currentQuestionIndex));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 26);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const a_r8 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"answer\", ctx_r6.currentQuestionIndex, \"\");\n    i0.ɵɵpropertyInterpolate(\"id\", a_r8);\n    i0.ɵɵpropertyInterpolate(\"value\", a_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", a_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", a_r8, \" \");\n  }\n}\nfunction UserTakeTestView_div_2_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_div_23_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.checkAnswer());\n    });\n    i0.ɵɵelementStart(1, \"button\", 28);\n    i0.ɵɵtext(2, \" Submit \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserTakeTestView_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"h1\");\n    i0.ɵɵtext(2, \"Test Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"div\", 12)(5, \"h4\", 13);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 14)(8, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_Template_div_click_8_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.previousButton());\n    });\n    i0.ɵɵelementStart(9, \"button\", 16);\n    i0.ɵɵelement(10, \"i\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 18)(12, \"div\", 19)(13, \"h4\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"h5\");\n    i0.ɵɵtext(16, \"Please choose correct answer\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 12)(18, \"div\", 20);\n    i0.ɵɵtemplate(19, UserTakeTestView_div_2_div_19_Template, 4, 5, \"div\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_2_Template_div_click_20_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.nextButton());\n    });\n    i0.ɵɵelementStart(21, \"button\", 16);\n    i0.ɵɵelement(22, \"i\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(23, UserTakeTestView_div_2_div_23_Template, 3, 0, \"div\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate3(\" Time Remaining: \", ctx_r1.minutes, \":\", ctx_r1.seconds < 10 ? \"0\" : \"\", \"\", ctx_r1.seconds, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.currentQuestion.question);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.currentQuestion.answers);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentQuestionIndex == ctx_r1.questionList.length - 1);\n  }\n}\nfunction UserTakeTestView_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 29);\n    i0.ɵɵtext(2, \"Time's up!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function UserTakeTestView_div_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.checkAnswer());\n    });\n    i0.ɵɵtext(4, \" View Result \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserTakeTestView_div_4_div_6_tr_15_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Correct\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_4_div_6_tr_15_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Incorrect\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_4_div_6_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtemplate(10, UserTakeTestView_div_4_div_6_tr_15_p_10_Template, 2, 0, \"p\", 3);\n    i0.ɵɵtemplate(11, UserTakeTestView_div_4_div_6_tr_15_p_11_Template, 2, 0, \"p\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r22 = ctx.$implicit;\n    const i_r23 = ctx.index;\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r23 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r22.question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r21.selectedAnswers[i_r23]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r22.correctAnswer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r21.selectedAnswers[i_r23] == null ? null : ctx_r21.selectedAnswers[i_r23].trim().toLowerCase()) === (question_r22.correctAnswer == null ? null : question_r22.correctAnswer.trim().toLowerCase()));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r21.selectedAnswers[i_r23] == null ? null : ctx_r21.selectedAnswers[i_r23].trim().toLowerCase()) !== (question_r22.correctAnswer == null ? null : question_r22.correctAnswer.trim().toLowerCase()));\n  }\n}\nfunction UserTakeTestView_div_4_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 33)(2, \"thead\", 34)(3, \"tr\")(4, \"th\", 35);\n    i0.ɵɵtext(5, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 35);\n    i0.ɵɵtext(7, \"Question\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 35);\n    i0.ɵɵtext(9, \"Your Answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 35);\n    i0.ɵɵtext(11, \"Correct Answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 35);\n    i0.ɵɵtext(13, \"Status\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, UserTakeTestView_div_4_div_6_tr_15_Template, 12, 6, \"tr\", 36);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.questionList);\n  }\n}\nfunction UserTakeTestView_div_4_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1, \" No answers have been submitted. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserTakeTestView_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 30)(2, \"h1\", 29);\n    i0.ɵɵtext(3, \"Test Results\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h2\", 29);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, UserTakeTestView_div_4_div_6_Template, 16, 1, \"div\", 31);\n    i0.ɵɵtemplate(7, UserTakeTestView_div_4_ng_template_7_Template, 2, 0, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r19 = i0.ɵɵreference(8);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" Total Corrected Answers: \", ctx_r3.correctAnswersCount, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.selectedAnswers.length > 0)(\"ngIfElse\", _r19);\n  }\n}\nexport class UserTakeTestView {\n  constructor(router, cdRef) {\n    this.router = router;\n    this.cdRef = cdRef;\n    this.startTest = false;\n    this.currentQuestion = null;\n    this.currentQuestionIndex = -1;\n    this.questionList = [];\n    this.selectedAnswers = [];\n    this.correctAnswersCount = 0;\n    this.setId = -1;\n    // Timer var\n    this.remainingTime = 20 * 60; // 20 minutes in seconds\n    this.minutes = 0;\n    this.seconds = 0;\n    this.finishTest = false;\n    let question = {\n      questionId: 1,\n      question: \"Char* string = 'Hello world';\\nprintf(\\\"%d\\\", sizeof(string))\",\n      answers: ['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'],\n      correctAnswer: 'D. I don\\'t known'\n    };\n    let question1 = {\n      questionId: 2,\n      question: \"How many data type are there in JavaScript)\",\n      answers: ['A. 5', 'B. 7', 'C. 6', 'D. None of the above'],\n      correctAnswer: 'D. None of the above'\n    };\n    let question2 = {\n      questionId: 3,\n      question: \"How many data type are there in JavaScript)\",\n      answers: ['A. 5', 'B. 7', 'C. 6', 'D. None of the above'],\n      correctAnswer: 'D. None of the above'\n    };\n    this.questionList = [question, question1, question, question1];\n    this.selectedAnswers = new Array(this.questionList.length).fill(null);\n  }\n  ngOnInit() {\n    this.setId = this.router.snapshot.params['tid'];\n  }\n  startButton() {\n    this.startTest = true;\n    this.currentQuestionIndex = 0;\n    this.currentQuestion = this.questionList[0];\n    this.updateDisplay();\n    this.startTimer();\n  }\n  nextButton() {\n    this.currentQuestionIndex++;\n    if (this.currentQuestionIndex >= this.questionList.length) {\n      this.currentQuestionIndex = this.questionList.length - 1;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    this.cdRef.detectChanges();\n  }\n  previousButton() {\n    this.currentQuestionIndex--;\n    if (this.currentQuestionIndex <= -1) {\n      this.currentQuestionIndex = 0;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    this.cdRef.detectChanges();\n  }\n  captureAnswer(event, questionIndex) {\n    console.log(event.target.value);\n    this.selectedAnswers[questionIndex] = event.target.value;\n    this.cdRef.detectChanges();\n  }\n  checkAnswer() {\n    this.startTest = false;\n    this.finishTest = true;\n    this.cdRef.detectChanges();\n    for (let i = 0; i < this.questionList.length; i++) {\n      const correctAnswer = this.questionList[i].correctAnswer;\n      console.log(correctAnswer);\n      if (correctAnswer && this.selectedAnswers[i] && correctAnswer.trim().toLowerCase() === this.selectedAnswers[i].trim().toLowerCase()) {\n        this.correctAnswersCount++;\n      }\n    }\n  }\n  startTimer() {\n    this.timerInterval = setInterval(() => {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n        this.updateDisplay();\n      } else {\n        clearInterval(this.timerInterval);\n        // Logic when timer reaches 0, e.g., submit test automatically\n      }\n    }, 1000);\n  }\n  updateDisplay() {\n    this.minutes = Math.floor(this.remainingTime / 60);\n    this.seconds = this.remainingTime % 60;\n  }\n  ngOnDestroy() {\n    clearInterval(this.timerInterval); // Clear the interval when component is destroyed\n  }\n  static #_ = this.ɵfac = function UserTakeTestView_Factory(t) {\n    return new (t || UserTakeTestView)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserTakeTestView,\n    selectors: [[\"app-user-question-list-view\"]],\n    decls: 5,\n    vars: 4,\n    consts: [[1, \"container\", \"mt-4\"], [\"class\", \"row justify-content-center\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"min-height: 400px\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"row\", \"justify-content-center\"], [1, \"card\", \"mt-4\", 2, \"width\", \"850px\"], [1, \"h4\", \"m-2\", \"mt-4\"], [1, \"h4\", \"m-2\"], [1, \"row\", \"text-center\", \"justify-content-center\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", \"px-2\", \"m-4\", 2, \"width\", \"200px\", 3, \"click\"], [1, \"row\", 2, \"min-height\", \"400px\"], [1, \"col-10\"], [1, \"row\"], [2, \"margin-left\", \"835px\"], [1, \"row\", \"border\", \"rounded\", \"p-3\", \"mt-5\"], [1, \"col-2\", \"d-flex\", \"justify-content-center\", \"align-items-center\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\"], [1, \"bi\", \"bi-arrow-left\"], [1, \"col-8\"], [1, \"row\", \"mb-3\"], [1, \"col-12\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [1, \"bi\", \"bi-arrow-right\"], [\"class\", \"d-flex justify-content-center\", 3, \"click\", 4, \"ngIf\"], [1, \"form-check\"], [\"type\", \"radio\", 1, \"form-check-input\", 3, \"name\", \"id\", \"value\", \"change\"], [1, \"form-check-label\", 3, \"for\"], [1, \"d-flex\", \"justify-content-center\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\", 2, \"width\", \"150px\"], [1, \"text-center\"], [1, \"container\", \"mt-5\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResults\", \"\"], [1, \"table\", \"table-bordered\"], [1, \"thead-light\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"]],\n    template: function UserTakeTestView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, UserTakeTestView_div_1_Template, 17, 0, \"div\", 1);\n        i0.ɵɵtemplate(2, UserTakeTestView_div_2_Template, 24, 6, \"div\", 2);\n        i0.ɵɵtemplate(3, UserTakeTestView_div_3_Template, 5, 0, \"div\", 3);\n        i0.ɵɵtemplate(4, UserTakeTestView_div_4_Template, 9, 3, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.startTest == false && ctx.finishTest == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.startTest == true && ctx.remainingTime > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.remainingTime <= 0 && ctx.startTest);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.finishTest);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","UserTakeTestView","constructor","router","cdRef","question","questionId","answers","correctAnswer","question1","question2","questionList","selectedAnswers","Array","length","fill","ngOnInit","setId","snapshot","params","startButton","startTest","currentQuestionIndex","currentQuestion","updateDisplay","startTimer","nextButton","detectChanges","previousButton","captureAnswer","event","questionIndex","console","log","target","value","checkAnswer","finishTest","i","trim","toLowerCase","correctAnswersCount","timerInterval","setInterval","remainingTime","clearInterval","minutes","Math","floor","seconds","ngOnDestroy","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTakeTestView/userTakeTestView.html","/Users/namcuong757/eclipse-workspace/CRM-Project/Frontend/src/app/view/user/userTakeTestView/userTakeTestView.ts"],"sourcesContent":["<div class=\"container mt-4\">\n  <div\n    class=\"row justify-content-center\"\n    *ngIf=\"startTest == false && finishTest== false\"\n  >\n    <div class=\"card mt-4\" style=\"width: 850px\">\n      <label class=\"h4 m-2 mt-4\">\n        · You have 20 minutes to complete the test.</label\n      >\n      <label class=\"h4 m-2\">\n        · Once you click the start button, the TIMER will start.</label\n      >\n      <label class=\"h4 m-2\">\n        · During the TEST process, you will not be able to pause or\n        cancel.</label\n      >\n      <label class=\"h4 m-2\">\n        · After you start test, the clock will appear in the upper right\n        corner.</label\n      >\n      <label class=\"h4 m-2\">\n        · When you answer the question, your answer is automatically\n        SAVED.</label\n      >\n      <label class=\"h4 m-2\">\n        · Once you have completed all questions, please click the \"Submit\"\n        button.</label\n      >\n      <div class=\"row text-center justify-content-center\">\n        <button\n          class=\"btn btn-primary btn-lg px-2 m-4\"\n          style=\"width: 200px\"\n          (click)=\"startButton()\"\n        >\n          Start\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"row\"\n    style=\"min-height: 400px\"\n    *ngIf=\"startTest == true && remainingTime > 0\"\n  >\n    <h1>Test Name</h1>\n    <div class=\"col-10\">\n      <div class=\"row\">\n        <h4 style=\"margin-left: 835px\">\n          Time Remaining: {{ minutes }}:{{ seconds < 10 ? '0' : '' }}{{ seconds\n          }}\n        </h4>\n      </div>\n      <div class=\"row border rounded p-3 mt-5\">\n        <!-- Previous Button -->\n        <div\n          class=\"col-2 d-flex justify-content-center align-items-center\"\n          (click)=\"previousButton()\"\n        >\n          <button class=\"btn btn-secondary btn-sm\">\n            <i class=\"bi bi-arrow-left\"></i>\n          </button>\n        </div>\n\n        <!-- Question and Answers -->\n        <div class=\"col-8\">\n          <!-- Question -->\n          <div class=\"row mb-3\">\n            <h4>{{currentQuestion.question}}</h4>\n            <h5>Please choose correct answer</h5>\n          </div>\n\n          <!-- Answers -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-check\" *ngFor=\"let a of currentQuestion.answers\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"answer{{currentQuestionIndex}}\"\n                  id=\"{{a}}\"\n                  value=\"{{a}}\"\n                  (change)=\"captureAnswer($event, currentQuestionIndex)\"\n                />\n                <label class=\"form-check-label\" for=\"{{a}}\"> {{a}} </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Next Button -->\n        <div\n          class=\"col-2 d-flex justify-content-center align-items-center\"\n          (click)=\"nextButton()\"\n        >\n          <button class=\"btn btn-secondary btn-sm\">\n            <i class=\"bi bi-arrow-right\"></i>\n          </button>\n        </div>\n         <!-- Submit Button -->\n        <div\n          class=\"d-flex justify-content-center\"\n          (click)=\"checkAnswer()\"\n          *ngIf=\"currentQuestionIndex == questionList.length-1\"\n        >\n          <button class=\"btn btn-secondary btn-sm\" style=\"width: 150px\">\n            Submit\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"remainingTime <= 0 && startTest\">\n    <h1 class=\"text-center\">Time's up!</h1>\n    <button\n      class=\"btn btn-primary btn-lg px-2 m-4\"\n      style=\"width: 200px\"\n      (click)=\"checkAnswer()\"\n    >\n      View Result\n    </button>\n  </div>\n  <div *ngIf=\"finishTest\">\n    <div class=\"container mt-5\">\n      <h1 class=\"text-center\">Test Results</h1>\n      <h2 class=\"text-center\">\n        Total Corrected Answers: {{correctAnswersCount}}\n      </h2>\n      <div *ngIf=\"selectedAnswers.length > 0; else noResults\">\n        <table class=\"table table-bordered\">\n          <thead class=\"thead-light\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Question</th>\n              <th scope=\"col\">Your Answer</th>\n              <th scope=\"col\">Correct Answer</th>\n              <th scope=\"col\">Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let question of questionList; let i = index\">\n              <th scope=\"row\">{{ i + 1 }}</th>\n              <td>{{ question.question }}</td>\n              <td>{{ selectedAnswers[i] }}</td>\n              <td>{{ question.correctAnswer }}</td>\n              <td>\n                <p\n                  \n                  *ngIf=\"selectedAnswers[i]?.trim().toLowerCase() === question.correctAnswer?.trim().toLowerCase()\"\n                  >Correct</p\n                >\n                <p\n                  \n                  *ngIf=\"selectedAnswers[i]?.trim().toLowerCase() !== question.correctAnswer?.trim().toLowerCase()\"\n                  >Incorrect</p\n                >\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <ng-template #noResults>\n        <div class=\"alert alert-warning\" role=\"alert\">\n          No answers have been submitted.\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ChangeDetectorRef} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-question-list-view',\n  templateUrl: './userTakeTestView.html',\n  styleUrls: ['./userTakeTestView.css']\n})\nexport class UserTakeTestView implements OnInit\n{\n  startTest:boolean = false;\n  currentQuestion:any = null;\n  currentQuestionIndex:number = -1;\n  questionList:any = [];\n  selectedAnswers: any[] = [];\n  correctAnswersCount:number = 0;\n  setId:number = -1;\n  // Timer var\n  remainingTime: number = 20 * 60; // 20 minutes in seconds\n  timerInterval: any;\n  minutes: number = 0;\n  seconds: number = 0;\n  finishTest:boolean = false;\n\n  constructor(private router:ActivatedRoute, private cdRef:ChangeDetectorRef )\n  {\n    let question = {questionId:1, question:\"Char* string = 'Hello world';\\nprintf(\\\"%d\\\", sizeof(string))\",\n      answers:['A. 4', 'B. 8', 'C. 2', 'D. I don\\'t known'], correctAnswer:'D. I don\\'t known'}\n    let question1 = {questionId:2, question:\"How many data type are there in JavaScript)\",\n      answers:['A. 5', 'B. 7', 'C. 6', 'D. None of the above'], correctAnswer:'D. None of the above'}\n    let question2 = {questionId:3, question:\"How many data type are there in JavaScript)\",\n      answers:['A. 5', 'B. 7', 'C. 6', 'D. None of the above'], correctAnswer:'D. None of the above'}\n      this.questionList = [question,question1,question,question1] ;\n      this.selectedAnswers = new Array(this.questionList.length).fill(null);\n  }\n\n  ngOnInit(): void\n  {\n    this.setId = this.router.snapshot.params['tid'];\n  }\n\n  startButton()\n  {\n    this.startTest = true;\n    this.currentQuestionIndex = 0;\n    this.currentQuestion = this.questionList[0];\n    this.updateDisplay();\n    this.startTimer();\n\n  }\n  nextButton()\n  {\n    this.currentQuestionIndex++;\n    if(this.currentQuestionIndex >= this.questionList.length)\n    {\n      this.currentQuestionIndex = this.questionList.length - 1;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    this.cdRef.detectChanges();\n  }\n\n  previousButton()\n  {\n    this.currentQuestionIndex--;\n    if(this.currentQuestionIndex <= -1)\n    {\n      this.currentQuestionIndex = 0;\n    }\n    this.currentQuestion = this.questionList[this.currentQuestionIndex];\n    this.cdRef.detectChanges();\n  }\n  captureAnswer(event: any, questionIndex: number)\n  {\n    console.log(event.target.value);\n    this.selectedAnswers[questionIndex] = event.target.value;\n    this.cdRef.detectChanges();\n  }\n  checkAnswer()\n  {\n    this.startTest = false;\n    this.finishTest = true;\n    this.cdRef.detectChanges();\n    for (let i = 0; i < this.questionList.length; i++) \n    {\n      const correctAnswer:string = this.questionList[i].correctAnswer;\n      console.log(correctAnswer);\n      if (correctAnswer && this.selectedAnswers[i] && correctAnswer.trim().toLowerCase() === this.selectedAnswers[i].trim().toLowerCase()) {\n        this.correctAnswersCount++;\n      }\n    }\n  }\n  startTimer() {\n    this.timerInterval = setInterval(() => {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n        this.updateDisplay();\n      } else {\n        clearInterval(this.timerInterval);\n        // Logic when timer reaches 0, e.g., submit test automatically\n      }\n    }, 1000);\n  }\n  updateDisplay()\n  {\n    this.minutes = Math.floor(this.remainingTime / 60);\n    this.seconds = this.remainingTime % 60;\n  }\n  ngOnDestroy() \n  {\n    clearInterval(this.timerInterval); // Clear the interval when component is destroyed\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}